###############################################################################
# Common Configuration Settings
#
# Common configuration settings for this deployment
#
# Automatically generated by script.
#

# < Nuage Unzip Files Directory >
# The path to the directory where the unzipped Nuage Networks files for this deployment can be found, e.g. qcow2 files. When using a clone of the MetroAE repo, the path should be the full path of the directory on the MetroAE host. When using the MetroAE Docker container, the path must be relative to the internal container mountpoint, /metroae_images. For example, if you have setup your container to use '/tmp' as your images directory, the MetroAE container setup will create '/tmp/metroae_images' on the Docker host and mount this directory as '/metroae_images' inside the MetroAE container. If you copy your image files to '/tmp/metroae_images/6.0.0/' on the Docker host, this variable should be set to '/metroae_images/6.0.1/'.
#
nuage_unzipped_files_dir: "/my/unzipped/filedir"

# < Domain Name >
# Domain name for this deployment. E.g. company.net.
#
dns_domain: "company.com"

##### Management FQDNs

# < Global VSD FQDN >
# For clustered VSD, the XMPP FQDN for the cluster; For standalone VSD, the FQDN of the single VSD
#
vsd_fqdn_global: "vsd1.company.com"

# < Global SD-WAN Portal FQDN >
# For HA PORTAL, the FQDN for the Proxy/LB endpoint; For standalone PORTAL, the FQDN of the single PORTAL
#
# portal_fqdn_global: ""

# < Global VSTAT FQDN >
# For clustered VSTAT, the FQDN for the VSTAT cluster; For standalone VSTAT, the FQDN of the single VSTAT
#
# vstat_fqdn_global: ""

######################

##### Network Bridges

# < Management Network Bridge >
# Network Bridge used for the management interface of a component or the BOF interface on VSC. This will be a Distributed Virtual PortGroup (DVPG) when deploying on vCenter or a Linux network bridge when deploying on KVM. This field can be overridden by defining the management network bridge separately in the component configuration
#
mgmt_bridge: "br0"

# < Data Network Bridge >
# Network Bridge used for the data path of a component or the Control interface on VSC. This will be a Distributed Virtual PortGroup (DVPG) when deploying on vCenter or a Linux network bridge when deploying on KVM. This field can be overridden by defining the Data network bridge separately in the component configuration
#
data_bridge: "br1"

# < NSGv Access Bridge >
# Network bridge used for the access network when installing an NSGv. This will be a Distributed Virtual PortGroup (DVPG) when deploying on vCenter or a Linux network bridge when installing on KVM
#
# access_bridge: ""

#####################

##### Network Services

# < NTP Server IP(s) >
# List of one or more NTP server addresses that must be in dotted-decimal (IPv4) or hexidecimal (IPv6) format
#
ntp_server_list: [ "5.5.5.5", "2.2.2.2", ]

# < DNS server IP(s) >
# List of one or more DNS server addresses for resolving component domain names. Must be in dotted-decimal (IPv4) or hexidecimal (IPv6) format.
#
dns_server_list: [ "10.1.0.2", ]

######################

# < Timezone >
# Timezone specification for the deployment
#
# timezone: US/Pacific

##### vCenter Parameters

# < vCenter Datacenter >
# vCenter datacenter to deploy Nuage components
#
vcenter_datacenter: "DC"

# < vCenter Cluster Name >
# Name of the vCenter cluster on which to deploy Nuage components
#
vcenter_cluster: "Cluster-A"

# < vCenter Host Reference >
# Requires ovftool 4.3. Reference to the host on the vCenter cluster on which to deploy Nuage components
#
# vcenter_host_reference: ""

# < vCenter Datastore Name >
# Name of the vCenter datastore on which to deploy the Nuage components
#
vcenter_datastore: "datastoreA"

# < vCenter Resource Pool >
# The vCenter resource pool where the VMs need to be located. A resource pool is a logical abstraction of resources. Different resource pools can be configured to have different priorities in case of resource contention and can have different resource reservations and limitations.
#
# vcenter_resource_pool: ""

# < OVF tool location >
# This is the full path to the vCenter OVFtool executable. When running metroae from a clone of the nuage-metro repo, this should be set to the path to ovftool on the host, usually /usr/bin/ovftool. When running the metroae Docker container, the ovftool installation directory, /usr/lib/vmware-ovftool, must be copied to the metroae_data directory and this parameter must be set to the internal container path to the ovftool in that directory, /data/vmware-ovftool/ovftool.
#
vcenter_ovftool: "/usr/bin/ovftool"

########################

# < XMPP TLS >
# Flag to indicate when secure communications via TLS will be used between VSCs and VSDs
#
# xmpp_tls: True

# < OpenFlow TLS >
# Flag to indicate when secure communications via TLS will be used between VSCs and data plane components, e.g. VRS or NSGv; If VRS is defined, target_server_password must be defined in credentials.yml
#
# openflow_tls: True

# < Reports Directory >
# Full path to the directory where the generated health reports for this deployment will be placed
#
# metro_reports_dir: ./reports

# < VSD License Required Days Left >
# Raise a failure if the VSD licenses do not have at least the specified number of days remaining before expiration. If undefined, no check of days remaining before license expiration will be made. If you want to verify that the number of days left before expiration is more than a certain number of days, uncomment this variable and set the value to the number of days.
#
# vsd_license_required_days_left: -1

# < VSD Standard License File >
# Path to the standard license file for the VSD
#
# vsd_license_file: ""

# < VSD Cluster License File >
# Path to the cluster license file for the VSD
#
# vsd_cluster_license_file: ""

# < SD-WAN Portal License Filename >
# Path to the license file for the SD-WAN Portal
#
# portal_license_file: ""

# < Branding Zip File >
# Enables custom branding for the VSD GUI. When not defined, the default VSD branding, already present on the VSD itself, will be used. If branding_zip_file is defined, its value will be used to replace the default VSD branding with the contents of a zip file on the Ansible host.  The files contained in the zip file should conform to the specifications of the VNS install guide. For replacing the default branding on the VSD, this value should be set to one of the following values: 1) The path to a branding zip file on the Ansible host 2) The special value 'nuage' for adding a MetroÆ tag to the default VSD branding. This value is provided as an example of a minimal modification of branding. 3) The special value 'metroae' to replace the default VSD branding with a complete MetroÆ-themed brand. This value is provided as an example of a complete replacement of all branding components. Note that when this is defined the existing branding will be backed up to the directory specified by the Metro Backup Root variable under (hostname)-branding/. To rollback a branding change, copy the branding zip file out of the backup directory, set this variable to the path to the copied backup file, and run the brand_vsd playbook, i.e. metroae brand_vsd.
#
# branding_zip_file: ""

##### Yum

# < Yum update >
# Flag to indicate whether to perform a Yum update on VSD during the installation
#
# yum_update: True

# < Proxy for Yum Updates >
# Proxy URL to be used if Yum repositories cannot be directly reached
#
# yum_proxy: NONE

#########

##### VSD Authentication

# < VSD Architect URL >
# VSD Architect URL. Required for tasks during Upgrade, Health Checks etc
#
# vsd_auth_url: https://(vsd_fqdn):8443

# < VSD Enterprise >
# Enterprise name used for authentication with VSD Architect. Required for tasks during Upgrade, Health Checks etc
#
# vsd_auth_enterprise: csp

########################

##### VCIN Authentication

# < VCIN URL >
# VCIN URL used for API interaction. Required for tasks like VRS-E upgrade (through VCIN)
#
# vcin_auth_url: https://(vcin_ip_address):8443

# < VCIN Enterprise >
# Enterprise name used for authentication with VCIN. Required for tasks like VRS-E upgrade (through VCIN)
#
# vcin_auth_enterprise: csp

#########################

##### Libnetwork

# < Libnetwork scope >
# Scope of libnetworking support; local: connectivity between containers is limited to within the local host; global: connectivity between containers may span across hosts in the cluster
# (local, global) 
#
# libnetwork_scope: local

# < Libnetwork cluster store URL scheme >
# Scheme portion of the URL pointing to the key-value store used for the Libnetwork cluster
#
# libnetwork_cluster_store_scheme: consul

# < Libnetwork cluster store URL host >
# Host portion of the URL pointing to the key-value store used for the Libnetwork cluster
#
# libnetwork_cluster_store_host: NONE

# < Libnetwork cluster store URL port >
# Port portion of the URL pointing to the key-value store used for the Libnetwork cluster
#
# libnetwork_cluster_store_port: 8500

################

##### MetroAE Config

# < MetroAE Config User Data File or Directory >
# The path to the MetroAE config user data. This can be the path to a specific file that contains the user data or it can be the path to a directory that contains one or more user data files. When using a clone of the MetroAE repo, the path should be the full path of the user data file or directory on the MetroAE host. When using the MetroAE Docker container, the path must be relative to the internal container mountpoint, '/metroae_data'. For example, if you have setup your container to use '/tmp' as your images directory, the MetroAE container setup will create '/tmp/metroae_data' on the Docker host and mount this directory as '/metroae_data' inside the MetroAE container. If you put your user data files to '/tmp/metroae_data/user_data/' on the Docker host, this variable should be set to '/metroae_data/user_data/'.
#
# config_user_data_path: ""

# < MetroAE Config Templates Directory >
# The path to the directory that contains the MetroAE config templates. When using a clone of the MetroAE repo, the path should be the full path of the template directory on the MetroAE host. When using the MetroAE Docker container, the path must be relative to the internal container mountpoint, '/metroae_data'. For example, if you have setup your container to use '/tmp' as your data directory, the MetroAE container setup will create '/tmp/metroae_data' on the Docker host, mount this directory as '/metroae_data' inside the MetroAE container, and copy the standard MetroAE config templates to '/tmp/metroae_data/standard-templates/templates/' on the Docker host. For this default configuration, this variable should be set to '/metroae_data/standard-templates/templates/'.
#
# config_template_path: ""

# < MetroAE Config VSD API Specifications Directory >
# The path to the directory that contains the MetroAE config VSD API specifications. When using a clone of the MetroAE repo, the path should be the full path of the specifications directory on the MetroAE host. When using the MetroAE Docker container, the path must be relative to the internal container mountpoint, '/metroae_data'. For example, if you have setup your container to use '/tmp' as your data directory, the MetroAE container setup will create '/tmp/metroae_data' on the Docker host, mount this directory as '/metroae_data' inside the MetroAE container, and copy the current VSD API specifications to '/tmp/metroae_data/vsd-api-specifications/' on the Docker host. For this default configuration, this variable should be set to '/metroae_data/vsd-api-specifications/'.
#
# config_vsd_api_spec_path: ""

####################
