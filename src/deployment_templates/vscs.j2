###############################################################################
# Virtualized Services Controller
#
# Specify configuration for Nuage VSCs.
#
# Automatically generated by {{ generator_script | default("script") }}.
#

{% if vscs is defined and vscs %}
{% for item in vscs %}
#
# VSC {{ loop.index }}
#
-
    ##### Management Network

    # < Hostname >
    # Hostname of the VSC instance
    #
    hostname: "{{ item.hostname }}"

    # < Management IP address >
    # The BOF/Management IP address of the controller
    #
    mgmt_ip: "{{ item.mgmt_ip }}"

    # < Management Network Prefix Length >
    # Management network prefix length
    #
    mgmt_ip_prefix: {{ item.mgmt_ip_prefix }}

    # < Management Network Gateway >
    # Gateway IP on the Management network
    #
    mgmt_gateway: "{{ item.mgmt_gateway }}"

    # < Management Network Static Routes >
    # Static Route list to be configured on the management/BOF interface. Define as empty list if no static routes are to be configured.
    #
    {%- if item.mgmt_static_route_list is defined %}
    mgmt_static_route_list: [ {% for i in item.mgmt_static_route_list | default([]) %}"{{ i }}", {% endfor %}]
    {%- else %}
    # mgmt_static_route_list: [ 0.0.0.0/1, 128.0.0.0/1 ]
    {%- endif %}

    ########################

    ##### Control Network

    # < Control IP address >
    # The Control/Data IP address of the controller
    #
    {%- if item.ctrl_ip is defined %}
    ctrl_ip: "{{ item.ctrl_ip }}"
    {%- else %}
    # ctrl_ip: ""
    {%- endif %}

    # < Control Netmask Prefix Length >
    # Control network prefix length
    #
    {%- if item.ctrl_ip_prefix is defined %}
    ctrl_ip_prefix: {{ item.ctrl_ip_prefix }}
    {%- else %}
    # ctrl_ip_prefix: ""
    {%- endif %}

    # < List of control IP VPRNs >
    # Comma Seperated list of control IP VPRNs. Each item in list is of format VLAN_ID:Control_IP_ADDR/NETMASK_LENGTH . Both Control IP address and Netmask length are optional
    #
    {%- if item.ctrl_ip_vprn_list is defined %}
    ctrl_ip_vprn_list: [ {% for i in item.ctrl_ip_vprn_list | default([]) %}"{{ i }}", {% endfor %}]
    {%- else %}
    # ctrl_ip_vprn_list: []
    {%- endif %}

    #####################

    ##### System info

    # < System IP address >
    # Required for BGP pairing with peers
    #
    system_ip: "{{ item.system_ip }}"

    # < VM name >
    # Name of the virtual machine on the Hypervisor/vCenter Server.
    #
    {%- if item.vmname is defined %}
    vmname: "{{ item.vmname }}"
    {%- else %}
    # vmname: (Hostname)
    {%- endif %}

    # < System Name >
    # Name of the system if other than hostname
    #
    {%- if item.system_name is defined %}
    system_name: "{{ item.system_name }}"
    {%- else %}
    # system_name: (Hostname)
    {%- endif %}

    # < XMPP username >
    # Unique username used to identify this VSC in its XMPP connection with VSD
    #
    {%- if item.xmpp_username is defined %}
    xmpp_username: "{{ item.xmpp_username }}"
    {%- else %}
    # xmpp_username: vsc1
    {%- endif %}

    #################

    ##### Target Server

    # < Target Server type >
    # Type of hypervisor environment into which the instance will be created
    # (kvm, vcenter, openstack, nuagex) 
    #
    target_server_type: "{{ item.target_server_type }}"

    # < Target Server IP or FQDN >
    # Hostname or IP address of the hypervisor where VM  will be instantiated. In the case of deployment in a vCenter environment, this will be the FQDN of the vCenter Server
    #
    target_server: "{{ item.target_server }}"

    ###################

    ##### Bridges and Private IP

    # < Management Network Bridge >
    # Network Bridge used for the management interface of a component or the BOF interface on VSC. This will be a Distributed Virtual PortGroup (DVPG) when deploying on vCenter or a Linux network bridge when deploying on KVM. This field can be overridden by defining the management network bridge separately in the component configuration. Defaults to the global setting
    #
    {%- if item.mgmt_bridge is defined %}
    mgmt_bridge: "{{ item.mgmt_bridge }}"
    {%- else %}
    # mgmt_bridge: (global Bridge interface)
    {%- endif %}

    # < Data Network Bridge >
    # Network Bridge used for the data path of a component or the Control interface on VSC. This will be a Distributed Virtual PortGroup (DVPG) when deploying on vCenter or a Linux network bridge when deploying on KVM.
    #
    {%- if item.data_bridge is defined %}
    data_bridge: "{{ item.data_bridge }}"
    {%- else %}
    # data_bridge: (global Bridge interface)
    {%- endif %}

    # < VSD FQDN >
    # FQDN of the VSD or VSD cluster for this VSC
    #
    {%- if item.vsd_fqdn is defined %}
    vsd_fqdn: "{{ item.vsd_fqdn }}"
    {%- else %}
    # vsd_fqdn: ""
    {%- endif %}

    # < Private Management IP >
    # Private Management IP Address of VSC instances
    #
    {%- if item.internal_mgmt_ip is defined %}
    internal_mgmt_ip: "{{ item.internal_mgmt_ip }}"
    {%- else %}
    # internal_mgmt_ip: ""
    {%- endif %}

    # < Private Control IP Address >
    # Private Control IP Address of VSC Instances
    #
    {%- if item.internal_ctrl_ip is defined %}
    internal_ctrl_ip: "{{ item.internal_ctrl_ip }}"
    {%- else %}
    # internal_ctrl_ip: ""
    {%- endif %}

    # < Private Data Gateway IP Address >
    # Private Data Gateway IP Address of VSC Instances
    #
    {%- if item.internal_data_gateway_ip is defined %}
    internal_data_gateway_ip: "{{ item.internal_data_gateway_ip }}"
    {%- else %}
    # internal_data_gateway_ip: ""
    {%- endif %}

    ############################

    {%- if show_target_server_type | default('vcenter') == 'vcenter' %}

    ##### vCenter Parameters

    # < vCenter Datacenter Name >
    # Name of the vCenter Datacenter on which the VSC VM will be deployed. Defaults to the common vCenter Datacenter Name if not defined here.
    #
    {%- if item.vcenter_datacenter is defined %}
    vcenter_datacenter: "{{ item.vcenter_datacenter }}"
    {%- else %}
    # vcenter_datacenter: (global vCenter Datacenter Name)
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('vcenter') == 'vcenter' %}

    # < vCenter Cluster Name >
    # Name of the vCenter Cluster on which the VSC VM will be deployed. Defaults to the common vCenter Cluster Name if not defined here.
    #
    {%- if item.vcenter_cluster is defined %}
    vcenter_cluster: "{{ item.vcenter_cluster }}"
    {%- else %}
    # vcenter_cluster: (global vCenter Cluster Name)
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('vcenter') == 'vcenter' %}

    # < vCenter Host Reference >
    # Requires ovftool 4.3. Reference to the host on the vCenter cluster on which to deploy Nuage components
    #
    {%- if item.vcenter_host_reference is defined %}
    vcenter_host_reference: "{{ item.vcenter_host_reference }}"
    {%- else %}
    # vcenter_host_reference: (global vCenter Host Reference)
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('vcenter') == 'vcenter' %}

    # < vCenter Datastore Name >
    # Name of the vCenter Datastore on which the VSC VM will be deployed. Defaults to the common vCenter Datastore Name if not defined here.
    #
    {%- if item.vcenter_datastore is defined %}
    vcenter_datastore: "{{ item.vcenter_datastore }}"
    {%- else %}
    # vcenter_datastore: (global vCenter Datastore Name)
    {%- endif %}

    ########################
    {%- endif %}

    {%- if show_target_server_type | default('openstack') == 'openstack' %}

    ##### OpenStack Parameters

    # < OpenStack Image >
    # Name of image installed on OpenStack for VSC
    #
    {%- if item.openstack_image is defined %}
    openstack_image: "{{ item.openstack_image }}"
    {%- else %}
    # openstack_image: ""
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('openstack') == 'openstack' %}

    # < OpenStack Flavor >
    # Name of instance flavor installed on OpenStack for VSC
    #
    {%- if item.openstack_flavor is defined %}
    openstack_flavor: "{{ item.openstack_flavor }}"
    {%- else %}
    # openstack_flavor: ""
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('openstack') == 'openstack' %}

    # < OpenStack Availability Zone >
    # Name of availability zone on OpenStack for VSC
    #
    {%- if item.openstack_availability_zone is defined %}
    openstack_availability_zone: "{{ item.openstack_availability_zone }}"
    {%- else %}
    # openstack_availability_zone: ""
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('openstack') == 'openstack' %}

    # < OpenStack Mgmt Network >
    # Name of management network on OpenStack for VSC
    #
    {%- if item.openstack_mgmt_network is defined %}
    openstack_mgmt_network: "{{ item.openstack_mgmt_network }}"
    {%- else %}
    # openstack_mgmt_network: ""
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('openstack') == 'openstack' %}

    # < OpenStack Mgmt Subnet >
    # Name of management subnet on OpenStack for VSC
    #
    {%- if item.openstack_mgmt_subnet is defined %}
    openstack_mgmt_subnet: "{{ item.openstack_mgmt_subnet }}"
    {%- else %}
    # openstack_mgmt_subnet: ""
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('openstack') == 'openstack' %}

    # < OpenStack Mgmt Port Name >
    # Name for Mgmt interface
    #
    {%- if item.openstack_mgmt_port_name is defined %}
    openstack_mgmt_port_name: "{{ item.openstack_mgmt_port_name }}"
    {%- else %}
    # openstack_mgmt_port_name: ""
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('openstack') == 'openstack' %}

    # < OpenStack Mgmt Port Security Groups >
    # Set of security groups to associate with Mgmt interface
    #
    {%- if item.openstack_mgmt_port_security_groups is defined %}
    openstack_mgmt_port_security_groups: [ {% for i in item.openstack_mgmt_port_security_groups | default([]) %}"{{ i }}", {% endfor %}]
    {%- else %}
    # openstack_mgmt_port_security_groups: []
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('openstack') == 'openstack' %}

    # < OpenStack Control Network >
    # Name of control network on OpenStack for VSC
    #
    {%- if item.openstack_control_network is defined %}
    openstack_control_network: "{{ item.openstack_control_network }}"
    {%- else %}
    # openstack_control_network: ""
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('openstack') == 'openstack' %}

    # < OpenStack Control Subnet >
    # Name of control subnet on OpenStack for VSC
    #
    {%- if item.openstack_control_subnet is defined %}
    openstack_control_subnet: "{{ item.openstack_control_subnet }}"
    {%- else %}
    # openstack_control_subnet: ""
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('openstack') == 'openstack' %}

    # < OpenStack Control Port Name >
    # Name for Control interface
    #
    {%- if item.openstack_control_port_name is defined %}
    openstack_control_port_name: "{{ item.openstack_control_port_name }}"
    {%- else %}
    # openstack_control_port_name: ""
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('openstack') == 'openstack' %}

    # < OpenStack Control Port Security Groups >
    # Set of security groups to associate with Control interface
    #
    {%- if item.openstack_control_port_security_groups is defined %}
    openstack_control_port_security_groups: [ {% for i in item.openstack_control_port_security_groups | default([]) %}"{{ i }}", {% endfor %}]
    {%- else %}
    # openstack_control_port_security_groups: []
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('openstack') == 'openstack' %}

    # < OpenStack Port Name >
    # Name for Mgmt interface
    #
    {%- if item.openstack_port_name is defined %}
    openstack_port_name: "{{ item.openstack_port_name }}"
    {%- else %}
    # openstack_port_name: ""
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('openstack') == 'openstack' %}

    # < OpenStack Port Security Groups >
    # Set of security groups to associate with Mgmt interface
    #
    {%- if item.openstack_port_security_groups is defined %}
    openstack_port_security_groups: [ {% for i in item.openstack_port_security_groups | default([]) %}"{{ i }}", {% endfor %}]
    {%- else %}
    # openstack_port_security_groups: []
    {%- endif %}

    ##########################
    {%- endif %}

    ##### Health Parameters

    # < Expected number of BGP neighbors >
    # Used in postdeploy and health workflows as expected values if non-zero
    #
    {%- if item.expected_num_bgp_peers is defined %}
    expected_num_bgp_peers: {{ item.expected_num_bgp_peers }}
    {%- else %}
    # expected_num_bgp_peers: 0
    {%- endif %}

    # < Expected number of vswitches >
    # Used in postdeploy and health workflows as expected values if non-zero
    #
    {%- if item.expected_num_vswitches is defined %}
    expected_num_vswitches: {{ item.expected_num_vswitches }}
    {%- else %}
    # expected_num_vswitches: 0
    {%- endif %}

    # < Expected number of host vports >
    # Used in postdeploy and health workflows as expected values if non-zero
    #
    {%- if item.expected_num_host_vports is defined %}
    expected_num_host_vports: {{ item.expected_num_host_vports }}
    {%- else %}
    # expected_num_host_vports: 0
    {%- endif %}

    # < Expected number of VM vports >
    # Used in postdeploy and health workflows as expected values if non-zero
    #
    {%- if item.expected_num_vm_vports is defined %}
    expected_num_vm_vports: {{ item.expected_num_vm_vports }}
    {%- else %}
    # expected_num_vm_vports: 0
    {%- endif %}

    # < Expected number of gateway ports >
    # Used in postdeploy and health workflows as expected values if non-zero
    #
    {%- if item.expected_num_gateway_ports is defined %}
    expected_num_gateway_ports: {{ item.expected_num_gateway_ports }}
    {%- else %}
    # expected_num_gateway_ports: 0
    {%- endif %}

    #######################

    ##### Certificates and credentials

    # < Ejabberd user id >
    # Ejabberd user id used to create the certificate
    #
    {%- if item.ejabberd_id is defined %}
    ejabberd_id: "{{ item.ejabberd_id }}"
    {%- else %}
    # ejabberd_id: ""
    {%- endif %}

    # < Private key path >
    # Path to VSC certificate key pem file
    #
    {%- if item.private_key_path is defined %}
    private_key_path: "{{ item.private_key_path }}"
    {%- else %}
    # private_key_path: ""
    {%- endif %}

    # < Certificate path >
    # Path to VSC certificate pem file
    #
    {%- if item.certificate_path is defined %}
    certificate_path: "{{ item.certificate_path }}"
    {%- else %}
    # certificate_path: ""
    {%- endif %}

    # < CA certificate path >
    # Path to CA certificate pem file
    #
    {%- if item.ca_certificate_path is defined %}
    ca_certificate_path: "{{ item.ca_certificate_path }}"
    {%- else %}
    # ca_certificate_path: ""
    {%- endif %}

    # < XMPP domain >
    # XMPP domain used in custom certificates
    #
    {%- if item.xmpp_domain is defined %}
    xmpp_domain: "{{ item.xmpp_domain }}"
    {%- else %}
    # xmpp_domain: ""
    {%- endif %}

    # < Credentials set name >
    # Name of the credentials set for the vsc
    #
    {%- if item.credentials_set is defined %}
    credentials_set: "{{ item.credentials_set }}"
    {%- else %}
    # credentials_set: ""
    {%- endif %}

    ##################################

    {%- if show_target_server_type | default('kvm') == 'kvm' %}

    ##### VSC Options

    # < KVM cpuset information >
    # Cpuset information for cpu pinning on KVM. For example, VSC requires 4 cores and sample values will be of the form [ 0, 1, 2, 3 ]
    #
    {%- if item.cpuset is defined %}
    cpuset: [ {% for i in item.cpuset | default([]) %}{{ i }}, {% endfor %}]
    {%- else %}
    # cpuset: []
    {%- endif %}
    {%- endif %}

    # < Harden VSC >
    # Enables hardening configuration on VSC
    #
    {%- if item.enable_hardening is defined %}
    enable_hardening: {{ item.enable_hardening | lower }}
    {%- else %}
    # enable_hardening: True
    {%- endif %}

    #################

{% endfor %}
{% else %}
[ ]
{% endif %}
