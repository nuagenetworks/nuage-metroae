###############################################################################
# Virtualized Network Service Proxy VM
#
# Configuration for Nuage VNS Proxy VM.
#
# Automatically generated by {{ generator_script | default("script") }}.
#

{% if vnsutils is defined and vnsutils %}
{% for item in vnsutils %}
#
# VNSUtil {{ loop.index }}
#
-
    ##### Management Interface

    # < Hostname >
    # Hostname of the Proxy/Util-VM instance
    #
    hostname: "{{ item.hostname }}"

    # < Management IP address >
    # IP address of the management interface
    #
    mgmt_ip: "{{ item.mgmt_ip }}"

    # < Management IP Prefix Length >
    # IP Prefix length for the management network
    #
    mgmt_ip_prefix: {{ item.mgmt_ip_prefix }}

    # < Management Gateway IP >
    # IP address of the gateway on the management network
    #
    mgmt_gateway: "{{ item.mgmt_gateway }}"

    ##########################

    ##### VM and Target Server

    # < VM name >
    # Name of the Virtual Machine on the Hypervisor
    #
    {%- if item.vmname is defined %}
    vmname: "{{ item.vmname }}"
    {%- else %}
    # vmname: (Hostname)
    {%- endif %}

    # < Target Server Type >
    # Type of hypervisor environment into which the instance will be created
    # (kvm, vcenter, aws, nuagex) 
    #
    target_server_type: "{{ item.target_server_type }}"

    # < Target Server IP or FQDN >
    # Hostname or IP address of the hypervisor where VM  will be instantiated. In the case of deployment in a vCenter environment, this will be the FQDN of the vCenter Server
    #
    target_server: "{{ item.target_server }}"

    ##########################

    ##### Bridge Info

    # < Management Bridge interface >
    # Network Bridge used for the management interface of a component or the BOF interface on the VM. This will be a Distributed Virtual PortGroup (DVPG) when deploying on vCenter or a Linux network bridge (ex: br0) when deploying on KVM. This field takes precedence over the value defined in the Commons section
    #
    {%- if item.mgmt_bridge is defined %}
    mgmt_bridge: "{{ item.mgmt_bridge }}"
    {%- else %}
    # mgmt_bridge: (global Bridge interface)
    {%- endif %}

    # < Data Network Bridge >
    # Network Bridge used for the data path of this component. This will be a Distributed Virtual PortGroup (DVPG) when deploying on vCenter or a Linux network bridge when deploying on KVM.
    #
    {%- if item.data_bridge is defined %}
    data_bridge: "{{ item.data_bridge }}"
    {%- else %}
    # data_bridge: (global Bridge interface)
    {%- endif %}

    #################

    {%- if show_target_server_type | default('kvm') == 'kvm' %}

    ##### KVM Data Interface

    # < VNSUTIL Data FQDN >
    #
    data_fqdn: "{{ item.data_fqdn }}"
    {%- endif %}

    {%- if show_target_server_type | default('kvm') == 'kvm' %}

    # < VNSUTIL Data IP address >
    #
    {%- if item.data_ip is defined %}
    data_ip: "{{ item.data_ip }}"
    {%- else %}
    # data_ip: ""
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('kvm') == 'kvm' %}

    # < Data Netmask >
    #
    {%- if item.data_netmask is defined %}
    data_netmask: "{{ item.data_netmask }}"
    {%- else %}
    # data_netmask: ""
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('kvm') == 'kvm' %}

    # < Data Subnet >
    # Only required for DHCP bootstrap support
    #
    {%- if item.data_subnet is defined %}
    data_subnet: "{{ item.data_subnet }}"
    {%- else %}
    # data_subnet: ""
    {%- endif %}

    ########################
    {%- endif %}

    ##### Data Parameters

    # < Gateway address for NSGvs >
    # Gateway address to be used for Data subnet
    #
    {%- if item.nsgv_gateway is defined %}
    nsgv_gateway: "{{ item.nsgv_gateway }}"
    {%- else %}
    # nsgv_gateway: ""
    {%- endif %}

    # < Data Static Route >
    # Static routes to configure for the data network of the UTIL VM
    #
    {%- if item.data_static_route is defined %}
    data_static_route: [ {% for i in item.data_static_route | default([]) %}"{{ i }}", {% endfor %}]
    {%- else %}
    # data_static_route: []
    {%- endif %}

    #####################

    {%- if show_target_server_type | default('vcenter') == 'vcenter' %}

    ##### vCenter Parameters

    # < vCenter Datacenter Name >
    # Name of the vCenter Datacenter on which the Proxy/Util VM will be deployed. Defaults to the common vCenter Datacenter Name if not defined here.
    #
    {%- if item.vcenter_datacenter is defined %}
    vcenter_datacenter: "{{ item.vcenter_datacenter }}"
    {%- else %}
    # vcenter_datacenter: (global vCenter Datacenter Name)
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('vcenter') == 'vcenter' %}

    # < vCenter Cluster Name >
    # Name of the vCenter Cluster on which the Proxy/Util VM will be deployed. Defaults to the common vCenter Cluster Name if not defined here.
    #
    {%- if item.vcenter_cluster is defined %}
    vcenter_cluster: "{{ item.vcenter_cluster }}"
    {%- else %}
    # vcenter_cluster: (global vCenter Cluster Name)
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('vcenter') == 'vcenter' %}

    # < vCenter Host Reference >
    # Requires ovftool 4.3. Reference to the host on the vCenter cluster on which to deploy Nuage components
    #
    {%- if item.vcenter_host_reference is defined %}
    vcenter_host_reference: "{{ item.vcenter_host_reference }}"
    {%- else %}
    # vcenter_host_reference: (global vCenter Host Reference)
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('vcenter') == 'vcenter' %}

    # < vCenter Datastore Name >
    # Name of the vCenter Datastore on which the Proxy/Util VM will be deployed. Defaults to the common vCenter Datastore Name if not defined here.
    #
    {%- if item.vcenter_datastore is defined %}
    vcenter_datastore: "{{ item.vcenter_datastore }}"
    {%- else %}
    # vcenter_datastore: (global vCenter Datastore Name)
    {%- endif %}

    ########################
    {%- endif %}

    {%- if show_target_server_type | default('aws') == 'aws' %}

    ##### AWS Parameters

    # < AWS Region >
    # Only applicable for AWS deployments
    #
    {%- if item.aws_region is defined %}
    aws_region: "{{ item.aws_region }}"
    {%- else %}
    # aws_region: ""
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('aws') == 'aws' %}

    # < AWS AMI ID >
    # AMI ID for AWS instance
    #
    {%- if item.aws_ami_id is defined %}
    aws_ami_id: "{{ item.aws_ami_id }}"
    {%- else %}
    # aws_ami_id: ""
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('aws') == 'aws' %}

    # < AWS Instance Type >
    # Instance Type of the AWS Instance
    #
    {%- if item.aws_instance_type is defined %}
    aws_instance_type: "{{ item.aws_instance_type }}"
    {%- else %}
    # aws_instance_type: ""
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('aws') == 'aws' %}

    # < AWS Keypair Name >
    # Name of the Keypair used to connect to VPC
    #
    {%- if item.aws_key_name is defined %}
    aws_key_name: "{{ item.aws_key_name }}"
    {%- else %}
    # aws_key_name: ""
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('aws') == 'aws' %}

    # < AWS Management ENI ID >
    # ENI ID for VNSUTIL Instance on Management Subnetwork
    #
    {%- if item.aws_mgmt_eni is defined %}
    aws_mgmt_eni: "{{ item.aws_mgmt_eni }}"
    {%- else %}
    # aws_mgmt_eni: ""
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('aws') == 'aws' %}

    # < AWS Data ENI ID >
    # ENI ID for VNSUTIL on Data Interface
    #
    {%- if item.aws_data_eni is defined %}
    aws_data_eni: "{{ item.aws_data_eni }}"
    {%- else %}
    # aws_data_eni: ""
    {%- endif %}

    ####################
    {%- endif %}

    {%- if show_target_server_type | default('kvm') == 'kvm' %}

    ##### Other Parameters

    # < KVM cpuset information >
    # Cpuset information for cpu pinning on KVM. For example, VNSUTIL requires 2 cores and sample values will be of the form [ 0, 1 ]
    #
    {%- if item.cpuset is defined %}
    cpuset: [ {% for i in item.cpuset | default([]) %}{{ i }}, {% endfor %}]
    {%- else %}
    # cpuset: []
    {%- endif %}
    {%- endif %}

    # < Health monitoring agent >
    # Enables setup of a health monitoring agent
    # (none, zabbix) 
    #
    {%- if item.health_monitoring_agent is defined %}
    health_monitoring_agent: "{{ item.health_monitoring_agent }}"
    {%- else %}
    # health_monitoring_agent: none
    {%- endif %}

    # < Credentials set name >
    # Name of the credentials set for the vsd
    #
    {%- if item.credentials_set is defined %}
    credentials_set: "{{ item.credentials_set }}"
    {%- else %}
    # credentials_set: ""
    {%- endif %}

    ######################

{% endfor %}
{% else %}
[ ]
{% endif %}
