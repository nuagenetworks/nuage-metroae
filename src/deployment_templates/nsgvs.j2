###############################################################################
# Network Services Gateway
#
# Specify configuration for Nuage MetroAE NSGvs.
#
# Automatically generated by {{ generator_script | default("script") }}.
#

{% if nsgvs is defined and nsgvs %}
{% for item in nsgvs %}
#
# NSGv {{ loop.index }}
#
-
    ##### VM and Target Server

    # < VM name >
    # Name of the NSGv VM on the hypervisor/vcenter
    #
    vmname: "{{ item.vmname }}"

    # < Target Server type >
    # Type of environment into which the NSGv will be instantiated
    # (kvm, vcenter, aws) 
    #
    target_server_type: "{{ item.target_server_type }}"

    # < Target Server hostname >
    # Hostname or IP address of the hypervisor or vCenter server where the NSGv will be instantiated
    #
    target_server: "{{ item.target_server }}"

    ##########################

    ##### Bootstrap Parameters

    # < Bootstrap Method >
    # Bootstrap method for the NSGv. The default is 'none' which means no bootstrap will be performed. 'zfb_metro' creates a boostrap ISO file based on the contents of the file nsgv_bootstrap.yml. 'zfb_external' is used when a 3rd-party ISO file is to be used.
    # (none, zfb_metro, zfb_external, activation_link) 
    #
    {%- if item.bootstrap_method is defined %}
    bootstrap_method: "{{ item.bootstrap_method }}"
    {%- else %}
    # bootstrap_method: none
    {%- endif %}

    # < External Bootstrap ISO File Directory >
    # Local path to the 3rd-party ISO file to use for bootstrap. Only required when bootstrap_method id set to 'zfb_external'
    #
    {%- if item.iso_path is defined %}
    iso_path: "{{ item.iso_path }}"
    {%- else %}
    # iso_path: ""
    {%- endif %}

    # < External Bootstrap ISO File Name >
    # Name of the 3rd-party ISO file to use for bootstrap. Only required when bootstrap_method id set to 'zfb_external'
    #
    {%- if item.iso_file is defined %}
    iso_file: "{{ item.iso_file }}"
    {%- else %}
    # iso_file: ""
    {%- endif %}

    # < IP Address to assign to NSGv by VNSUtil >
    #
    {%- if item.nsgv_ip is defined %}
    nsgv_ip: "{{ item.nsgv_ip }}"
    {%- else %}
    # nsgv_ip: ""
    {%- endif %}

    # < NSGV MAC Address >
    # MAC address the proxy will use to recognize the NSGV at boot/DHCP time. Only required when bootstrap_method is set to 'zfb_metro'
    #
    {%- if item.nsgv_mac is defined %}
    nsgv_mac: "{{ item.nsgv_mac }}"
    {%- else %}
    # nsgv_mac: ""
    {%- endif %}

    ##########################

    ##### Bridge info

    # < Management Network Bridge >
    # Network Bridge used for the management path of this component. This will be a Distributed Virtual PortGroup (DVPG) when deploying on vCenter or a Linux network bridge.
    #
    {%- if item.mgmt_bridge is defined %}
    mgmt_bridge: "{{ item.mgmt_bridge }}"
    {%- else %}
    # mgmt_bridge: (global Bridge interface)
    {%- endif %}

    # < Data Network Bridge >
    # Network Bridge used for the data path of this component. This will be a Distributed Virtual PortGroup (DVPG) when deploying on vCenter or a Linux network bridge.
    #
    {%- if item.data_bridge is defined %}
    data_bridge: "{{ item.data_bridge }}"
    {%- else %}
    # data_bridge: (global Bridge interface)
    {%- endif %}

    # < NSGv Access Bridge >
    # Network bridge used for the access network when installing an NSGv. This will be a Distributed Virtual PortGroup (DVPG) when deploying on vCenter or a Linux network bridge
    #
    {%- if item.access_bridge is defined %}
    access_bridge: "{{ item.access_bridge }}"
    {%- else %}
    # access_bridge: (global Bridge interface)
    {%- endif %}

    #################

    {%- if show_target_server_type | default('vcenter') == 'vcenter' %}

    ##### vCenter Parameters

    # < vCenter Datacenter Name >
    # Name of the vCenter Datacenter on which the NSG VM will be deployed. Defaults to the common vCenter Datacenter Name if not defined here.
    #
    {%- if item.vcenter_datacenter is defined %}
    vcenter_datacenter: "{{ item.vcenter_datacenter }}"
    {%- else %}
    # vcenter_datacenter: (global vCenter Datacenter Name)
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('vcenter') == 'vcenter' %}

    # < vCenter Cluster Name >
    # Name of the vCenter Cluster on which the NSG VM will be deployed. Defaults to the common vCenter Cluster Name if not defined here.
    #
    {%- if item.vcenter_cluster is defined %}
    vcenter_cluster: "{{ item.vcenter_cluster }}"
    {%- else %}
    # vcenter_cluster: (global vCenter Cluster Name)
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('vcenter') == 'vcenter' %}

    # < vCenter Host Reference >
    # Requires ovftool 4.3. Reference to the host on the vCenter cluster on which to deploy Nuage components
    #
    {%- if item.vcenter_host_reference is defined %}
    vcenter_host_reference: "{{ item.vcenter_host_reference }}"
    {%- else %}
    # vcenter_host_reference: (global vCenter Host Reference)
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('vcenter') == 'vcenter' %}

    # < vCenter Datastore Name >
    # Name of the vCenter Datastore on which the NSG VM will be deployed. Defaults to the common vCenter Datastore Name if not defined here.
    #
    {%- if item.vcenter_datastore is defined %}
    vcenter_datastore: "{{ item.vcenter_datastore }}"
    {%- else %}
    # vcenter_datastore: (global vCenter Datastore Name)
    {%- endif %}

    ########################
    {%- endif %}

    {%- if show_target_server_type | default('aws') == 'aws' %}

    ##### AWS Parameters

    # < AWS Region >
    # AWS Region
    #
    {%- if item.aws_region is defined %}
    aws_region: "{{ item.aws_region }}"
    {%- else %}
    # aws_region: ""
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('aws') == 'aws' %}

    # < AWS AMI ID >
    # AMI ID for AWS instance
    #
    {%- if item.aws_ami_id is defined %}
    aws_ami_id: "{{ item.aws_ami_id }}"
    {%- else %}
    # aws_ami_id: ""
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('aws') == 'aws' %}

    # < AWS AMI ID for Upgrading Instance >
    # AMI ID of the upgraded image
    #
    {%- if item.aws_upgrade_ami_id is defined %}
    aws_upgrade_ami_id: "{{ item.aws_upgrade_ami_id }}"
    {%- else %}
    # aws_upgrade_ami_id: ""
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('aws') == 'aws' %}

    # < AWS Instance Type >
    # Instance Type of the AWS Instance
    #
    {%- if item.aws_instance_type is defined %}
    aws_instance_type: "{{ item.aws_instance_type }}"
    {%- else %}
    # aws_instance_type: ""
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('aws') == 'aws' %}

    # < AWS Keypair Name >
    # Name of the Keypair used to connect to VPC
    #
    {%- if item.aws_key_name is defined %}
    aws_key_name: "{{ item.aws_key_name }}"
    {%- else %}
    # aws_key_name: ""
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('aws') == 'aws' %}

    # < AWS Access ENI >
    # ENI for Access Subnetwork
    #
    {%- if item.aws_access_eni is defined %}
    aws_access_eni: "{{ item.aws_access_eni }}"
    {%- else %}
    # aws_access_eni: ""
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('aws') == 'aws' %}

    # < AWS Data ENI >
    # ENI for Access Subnetwork
    #
    {%- if item.aws_data_eni is defined %}
    aws_data_eni: "{{ item.aws_data_eni }}"
    {%- else %}
    # aws_data_eni: ""
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('aws') == 'aws' %}

    # < AWS WAN EIP AllocID >
    # AWS WAN EIP AllocID
    #
    {%- if item.aws_eip_allocid is defined %}
    aws_eip_allocid: "{{ item.aws_eip_allocid }}"
    {%- else %}
    # aws_eip_allocid: ""
    {%- endif %}

    ####################
    {%- endif %}

    {%- if show_target_server_type | default('aws') == 'aws' %}

    ##### AWS VPC Parameters

    # < AWS Provision VPC CIDR >
    # CIDR for provisioning a VPC for the NSGv on AWS
    #
    {%- if item.provision_vpc_cidr is defined %}
    provision_vpc_cidr: "{{ item.provision_vpc_cidr }}"
    {%- else %}
    # provision_vpc_cidr: ""
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('aws') == 'aws' %}

    # < AWS Provision VPC NSG WAN Subnet CIDR >
    # WAN Subnet CIDR for provisioning a VPC for the NSGv on AWS
    #
    {%- if item.provision_vpc_nsg_wan_subnet_cidr is defined %}
    provision_vpc_nsg_wan_subnet_cidr: "{{ item.provision_vpc_nsg_wan_subnet_cidr }}"
    {%- else %}
    # provision_vpc_nsg_wan_subnet_cidr: ""
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('aws') == 'aws' %}

    # < AWS Provision VPC NSG LAN Subnet CIDR >
    # LAN Subnet CIDR for provisioning a VPC for the NSGv on AWS
    #
    {%- if item.provision_vpc_nsg_lan_subnet_cidr is defined %}
    provision_vpc_nsg_lan_subnet_cidr: "{{ item.provision_vpc_nsg_lan_subnet_cidr }}"
    {%- else %}
    # provision_vpc_nsg_lan_subnet_cidr: ""
    {%- endif %}
    {%- endif %}

    {%- if show_target_server_type | default('aws') == 'aws' %}

    # < AWS Provision VPC Private Subnet CIDR >
    # Private Subnet CIDR for provisioning a VPC for the NSGv on AWS
    #
    {%- if item.provision_vpc_private_subnet_cidr is defined %}
    provision_vpc_private_subnet_cidr: "{{ item.provision_vpc_private_subnet_cidr }}"
    {%- else %}
    # provision_vpc_private_subnet_cidr: ""
    {%- endif %}

    ########################
    {%- endif %}

    ##### NSGv Zero-Factor Bootstrap

    # < NSG Organization >
    # Organization on the VSD to associate with the NSG being bootstrapped, overrides global setting.
    #
    {%- if item.nsg_organization is defined %}
    nsg_organization: "{{ item.nsg_organization }}"
    {%- else %}
    # nsg_organization: ""
    {%- endif %}

    # < NSG Name >
    # Name of the NSG on the VSD
    #
    {%- if item.nsg_name is defined %}
    nsg_name: "{{ item.nsg_name }}"
    {%- else %}
    # nsg_name: ""
    {%- endif %}

    # < Activation Matching Type >
    # Field type to match against for NSGv activation.
    # (none, hostname, ip_address, mac_address, nsgateway_id, serial_number, uuid) 
    #
    {%- if item.match_type is defined %}
    match_type: "{{ item.match_type }}"
    {%- else %}
    # match_type: none
    {%- endif %}

    # < Activation Matching Value >
    # Value to match against for NSGv activation.
    #
    {%- if item.match_value is defined %}
    match_value: "{{ item.match_value }}"
    {%- else %}
    # match_value: ""
    {%- endif %}

    # < Enable SSH on NSGv >
    # Enables SSH on NSGv when set.
    #
    {%- if item.ssh_service is defined %}
    ssh_service: {{ item.ssh_service | lower }}
    {%- else %}
    # ssh_service: False
    {%- endif %}

    ################################

    ##### NSG Advanced Options

    # < NSG Infra Profile Template Name >
    # Name of the NSG infra profile template on the VSD
    #
    {%- if item.nsg_template_name is defined %}
    nsg_template_name: "{{ item.nsg_template_name }}"
    {%- else %}
    # nsg_template_name: ""
    {%- endif %}

    # < NSG Infra Profile Name >
    # Name of the NSG infra profile on the VSD
    #
    {%- if item.nsg_infra_profile_name is defined %}
    nsg_infra_profile_name: "{{ item.nsg_infra_profile_name }}"
    {%- else %}
    # nsg_infra_profile_name: ""
    {%- endif %}

    # < NSG Infra Profile Proxy DNS Name >
    # Name of the NSG infra profile proxy DNS on the VSD
    #
    {%- if item.proxy_dns_name is defined %}
    proxy_dns_name: "{{ item.proxy_dns_name }}"
    {%- else %}
    # proxy_dns_name: ""
    {%- endif %}

    # < Allow SSH Access Override >
    # Allows NSGs using this profile to override SSH access.
    #
    {%- if item.ssh_override is defined %}
    ssh_override: {{ item.ssh_override | lower }}
    {%- else %}
    # ssh_override: False
    {%- endif %}

    ##########################

    ##### VSC Info

    # < VSC Infra Profile Name >
    # Name of the VSC infra profile for the NSG on the VSD
    #
    {%- if item.vsc_infra_profile_name is defined %}
    vsc_infra_profile_name: "{{ item.vsc_infra_profile_name }}"
    {%- else %}
    # vsc_infra_profile_name: ""
    {%- endif %}

    # < VSC Infra Profile First Controller >
    # Host name or IP address of the VSC infra profile first controller for the NSG
    #
    {%- if item.first_controller_address is defined %}
    first_controller_address: "{{ item.first_controller_address }}"
    {%- else %}
    # first_controller_address: ""
    {%- endif %}

    # < VSC Infra Profile Second Controller >
    # Host name or IP address of the VSC infra profile second controller for the NSG
    #
    {%- if item.second_controller_address is defined %}
    second_controller_address: "{{ item.second_controller_address }}"
    {%- else %}
    # second_controller_address: ""
    {%- endif %}

    ##############

    # < NSG Network Port Name >
    # Name of the network port for the NSG
    #
    {%- if item.network_port_name is defined %}
    network_port_name: "{{ item.network_port_name }}"
    {%- else %}
    # network_port_name: ""
    {%- endif %}

    ##### Network and Access Ports

    # < NSG Network Port Physical Name >
    # Physical name of the network port for the NSG
    #
    {%- if item.network_port_physical_name is defined %}
    network_port_physical_name: "{{ item.network_port_physical_name }}"
    {%- else %}
    # network_port_physical_name: port1
    {%- endif %}

    # < NSG Access Port Name >
    # Name of the access port for the NSG. Deprecated in favor of access_ports
    #
    {%- if item.access_port_name is defined %}
    access_port_name: "{{ item.access_port_name }}"
    {%- else %}
    # access_port_name: ""
    {%- endif %}

    # < NSG Access Port Physical Name >
    # Physical name of the access port for the NSG. Deprecated in favor of access_ports
    #
    {%- if item.access_port_physical_name is defined %}
    access_port_physical_name: "{{ item.access_port_physical_name }}"
    {%- else %}
    # access_port_physical_name: port2
    {%- endif %}

    # < NSG Access Port VLAN Range >
    # VLAN range of the access port for the NSG. Deprecated in favor of access_ports
    #
    {%- if item.access_port_vlan_range is defined %}
    access_port_vlan_range: "{{ item.access_port_vlan_range }}"
    {%- else %}
    # access_port_vlan_range: ""
    {%- endif %}

    # < NSG Access Port VLAN Number >
    # VLAN number of the NSG access port for the NSG. Deprecated in favor of access_ports
    #
    {%- if item.access_port_vlan_number is defined %}
    access_port_vlan_number: {{ item.access_port_vlan_number }}
    {%- else %}
    # access_port_vlan_number: 0
    {%- endif %}

    # < NSGv Access ports list name >
    # Name of access ports list.
    #
    {%- if item.access_ports is defined %}
    access_ports: [ {% for i in item.access_ports | default([]) %}"{{ i }}", {% endfor %}]
    {%- else %}
    # access_ports: []
    {%- endif %}

    ##############################

    ##### Telnet and Credentials

    # < Telnet port for console >
    # The port for telnet to HV host to access NSGv serial or console terminal
    #
    {%- if item.telnet_port is defined %}
    telnet_port: {{ item.telnet_port }}
    {%- else %}
    # telnet_port: 2300
    {%- endif %}

    # < Credentials set name >
    # Name of the credentials set for the vsd
    #
    {%- if item.credentials_set is defined %}
    credentials_set: "{{ item.credentials_set }}"
    {%- else %}
    # credentials_set: ""
    {%- endif %}

    ############################

{% endfor %}
{% else %}
[ ]
{% endif %}
