###############################################################################
# Common Configuration Settings
#
# Common configuration settings for this deployment
#
# Automatically generated by {{ generator_script | default("script") }}.
#

# < Nuage Unzip Files Directory >
# Full path to the directory where the Nuage unzipped files for this deployment can be found  E.g. qcow2 files. When using docker container the path needs to be a relative path from the images path specified during setup.
#
nuage_unzipped_files_dir: "{{ nuage_unzipped_files_dir }}"

# < Domain Name >
# Domain name for this deployment. E.g. company.net.
#
dns_domain: "{{ dns_domain }}"

##### Management FQDNs

# < Global VSD FQDN >
# For clustered VSD, the XMPP FQDN for the cluster; For standalone VSD, the FQDN of the single VSD
#
vsd_fqdn_global: "{{ vsd_fqdn_global }}"

# < Global SD-WAN Portal FQDN >
# For HA PORTAL, the FQDN for the Proxy/LB endpoint; For standalone PORTAL, the FQDN of the single PORTAL
#
{%- if portal_fqdn_global is defined %}
portal_fqdn_global: "{{ portal_fqdn_global }}"
{%- else %}
# portal_fqdn_global: ""
{%- endif %}

# < Global VSTAT FQDN >
# For clustered VSTAT, the FQDN for the VSTAT cluster; For standalone VSTAT, the FQDN of the single VSTAT
#
{%- if vstat_fqdn_global is defined %}
vstat_fqdn_global: "{{ vstat_fqdn_global }}"
{%- else %}
# vstat_fqdn_global: ""
{%- endif %}

######################

##### Network Bridges

# < Management Network Bridge >
# Network Bridge used for the management interface of a component or the BOF interface on VSC. This will be a Distributed Virtual PortGroup (DVPG) when deploying on vCenter or a Linux network bridge when deploying on KVM. This field can be overridden by defining the management network bridge separately in the component configuration
#
mgmt_bridge: "{{ mgmt_bridge }}"

# < Data Network Bridge >
# Network Bridge used for the data path of a component or the Control interface on VSC. This will be a Distributed Virtual PortGroup (DVPG) when deploying on vCenter or a Linux network bridge when deploying on KVM. This field can be overridden by defining the Data network bridge separately in the component configuration
#
data_bridge: "{{ data_bridge }}"

# < NSGv Access Bridge >
# Network bridge used for the access network when installing an NSGv. This will be a Distributed Virtual PortGroup (DVPG) when deploying on vCenter or a Linux network bridge when installing on KVM
#
{%- if access_bridge is defined %}
access_bridge: "{{ access_bridge }}"
{%- else %}
# access_bridge: ""
{%- endif %}

#####################

##### Network Services

# < NTP Server IP(s) >
# List of one or more NTP server addresses that must be in dotted-decimal (IPv4) or hexidecimal (IPv6) format
#
ntp_server_list: [ {% for i in ntp_server_list | default([]) %}"{{ i }}", {% endfor %}]

# < DNS server IP(s) >
# List of one or more DNS server addresses for resolving component domain names. Must be in dotted-decimal (IPv4) or hexidecimal (IPv6) format.
#
dns_server_list: [ {% for i in dns_server_list | default([]) %}"{{ i }}", {% endfor %}]

######################

# < Timezone >
# Timezone specification for the deployment
#
{%- if timezone is defined %}
timezone: "{{ timezone }}"
{%- else %}
# timezone: US/Pacific
{%- endif %}

{%- if show_target_server_type | default('kvm') == 'kvm' %}

# < Images Directory >
# Full path to the directory on the KVM target server where qcow2 files will be copied
#
{%- if images_path is defined %}
images_path: "{{ images_path }}"
{%- else %}
# images_path: /var/lib/libvirt/images/
{%- endif %}
{%- endif %}

{%- if show_target_server_type | default('vcenter') == 'vcenter' %}

##### vCenter Parameters

# < vCenter Datacenter >
# vCenter datacenter to deploy Nuage components
#
{%- if vcenter_datacenter is defined %}
vcenter_datacenter: "{{ vcenter_datacenter }}"
{%- else %}
# vcenter_datacenter: ""
{%- endif %}
{%- endif %}

{%- if show_target_server_type | default('vcenter') == 'vcenter' %}

# < vCenter Cluster Name >
# Name of the vCenter cluster on which to deploy Nuage components
#
{%- if vcenter_cluster is defined %}
vcenter_cluster: "{{ vcenter_cluster }}"
{%- else %}
# vcenter_cluster: ""
{%- endif %}
{%- endif %}

{%- if show_target_server_type | default('vcenter') == 'vcenter' %}

# < vCenter Host Reference >
# Requires ovftool 4.3. Reference to the host on the vCenter cluster on which to deploy Nuage components
#
{%- if vcenter_host_reference is defined %}
vcenter_host_reference: "{{ vcenter_host_reference }}"
{%- else %}
# vcenter_host_reference: ""
{%- endif %}
{%- endif %}

{%- if show_target_server_type | default('vcenter') == 'vcenter' %}

# < vCenter Datastore Name >
# Name of the vCenter datastore on which to deploy the Nuage components
#
{%- if vcenter_datastore is defined %}
vcenter_datastore: "{{ vcenter_datastore }}"
{%- else %}
# vcenter_datastore: ""
{%- endif %}
{%- endif %}

{%- if show_target_server_type | default('vcenter') == 'vcenter' %}

# < vCenter Resource Pool >
# The vCenter resource pool where the VMs need to be located. A resource pool is a logical abstraction of resources. Different resource pools can be configured to have different priorities in case of resource contention and can have different resource reservations and limitations.
#
{%- if vcenter_resource_pool is defined %}
vcenter_resource_pool: "{{ vcenter_resource_pool }}"
{%- else %}
# vcenter_resource_pool: ""
{%- endif %}
{%- endif %}

{%- if show_target_server_type | default('vcenter') == 'vcenter' %}

# < OVF tool location >
# This is the full path to the vCenter OVFtool executable. When running metroae from a clone of the nuage-metro repo, this should be set to the path to ovftool on the host, usually /usr/bin/ovftool. When running the metroae Docker container, the ovftool installation directory, /usr/lib/vmware-ovftool, must be copied to the metroae_data directory and this parameter must be set to the internal container path to the ovftool in that directory, /data/vmware-ovftool/ovftool.
#
{%- if vcenter_ovftool is defined %}
vcenter_ovftool: "{{ vcenter_ovftool }}"
{%- else %}
# vcenter_ovftool: /usr/bin/ovftool
{%- endif %}

########################
{%- endif %}

{%- if show_target_server_type | default('openstack') == 'openstack' %}

##### OpenStack Parameters

# < OpenStack Project Name >
# Project name for OpenStack
#
{%- if openstack_project_name is defined %}
openstack_project_name: "{{ openstack_project_name }}"
{%- else %}
# openstack_project_name: ""
{%- endif %}
{%- endif %}

{%- if show_target_server_type | default('openstack') == 'openstack' %}

# < OpenStack Keystone URL >
# Keystone URL for OpenStack
#
{%- if openstack_auth_url is defined %}
openstack_auth_url: "{{ openstack_auth_url }}"
{%- else %}
# openstack_auth_url: ""
{%- endif %}

##########################
{%- endif %}

{%- if show_target_server_type | default('kvm') == 'kvm' %}

# < SSH Public Key >
# Full path to the public key file to be injected into Nuage components to enable passwordless connectivity for configuration. When using docker container changing the path from default can cause connectivity issues
#
{%- if user_ssh_pub_key is defined %}
user_ssh_pub_key: "{{ user_ssh_pub_key }}"
{%- else %}
# user_ssh_pub_key: ~/.ssh/id_rsa.pub
{%- endif %}
{%- endif %}

# < XMPP TLS >
# Flag to indicate when secure communications via TLS will be used between VSCs and VSDs
#
{%- if xmpp_tls is defined %}
xmpp_tls: {{ xmpp_tls | lower }}
{%- else %}
# xmpp_tls: True
{%- endif %}

# < OpenFlow TLS >
# Flag to indicate when secure communications via TLS will be used between VSCs and data plane components, e.g. VRS or NSGv; If VRS is defined, target_server_password must be defined in credentials.yml
#
{%- if openflow_tls is defined %}
openflow_tls: {{ openflow_tls | lower }}
{%- else %}
# openflow_tls: True
{%- endif %}

# < Reports Directory >
# Full path to the directory where the generated health reports for this deployment will be placed
#
{%- if metro_reports_dir is defined %}
metro_reports_dir: "{{ metro_reports_dir }}"
{%- else %}
# metro_reports_dir: ./reports
{%- endif %}

# < VSD License Required Days Left >
# Raise a failure if the VSD licenses do not have at least the specified number of days remaining before expiration. If undefined, no check of days remaining before license expiration will be made. If you want to verify that the number of days left before expiration is more than a certain number of days, uncomment this variable and set the value to the number of days.
#
{%- if vsd_license_required_days_left is defined %}
vsd_license_required_days_left: {{ vsd_license_required_days_left }}
{%- else %}
# vsd_license_required_days_left: -1
{%- endif %}

# < VSD Standard License File >
# Path to the standard license file for the VSD
#
{%- if vsd_license_file is defined %}
vsd_license_file: "{{ vsd_license_file }}"
{%- else %}
# vsd_license_file: ""
{%- endif %}

# < VSD Cluster License File >
# Path to the cluster license file for the VSD
#
{%- if vsd_cluster_license_file is defined %}
vsd_cluster_license_file: "{{ vsd_cluster_license_file }}"
{%- else %}
# vsd_cluster_license_file: ""
{%- endif %}

# < SD-WAN Portal License Filename >
# Path to the license file for the SD-WAN Portal
#
{%- if portal_license_file is defined %}
portal_license_file: "{{ portal_license_file }}"
{%- else %}
# portal_license_file: ""
{%- endif %}

# < Branding Zip File >
# Enables custom branding for the VSD GUI. When not defined, the default VSD branding, already present on the VSD itself, will be used. If branding_zip_file is defined, its value will be used to replace the default VSD branding with the contents of a zip file on the Ansible host.  The files contained in the zip file should conform to the specifications of the VNS install guide. For replacing the default branding on the VSD, this value should be set to one of the following values: 1) The path to a branding zip file on the Ansible host 2) The special value 'nuage' for adding a MetroÆ tag to the default VSD branding. This value is provided as an example of a minimal modification of branding. 3) The special value 'metroae' to replace the default VSD branding with a complete MetroÆ-themed brand. This value is provided as an example of a complete replacement of all branding components. Note that when this is defined the existing branding will be backed up to the directory specified by the Metro Backup Root variable under (hostname)-branding/. To rollback a branding change, copy the branding zip file out of the backup directory, set this variable to the path to the copied backup file, and run the brand_vsd playbook, i.e. metroae brand_vsd.
#
{%- if branding_zip_file is defined %}
branding_zip_file: "{{ branding_zip_file }}"
{%- else %}
# branding_zip_file: ""
{%- endif %}

##### Yum

# < Yum update >
# Flag to indicate whether to perform a Yum update on VSD during the installation
#
{%- if yum_update is defined %}
yum_update: {{ yum_update | lower }}
{%- else %}
# yum_update: True
{%- endif %}

# < Proxy for Yum Updates >
# Proxy URL to be used if Yum repositories cannot be directly reached
#
{%- if yum_proxy is defined %}
yum_proxy: "{{ yum_proxy }}"
{%- else %}
# yum_proxy: NONE
{%- endif %}

#########

{%- if show_target_server_type | default('aws') == 'aws' %}

# < Nuage Software Version >
# Nuage software version being installed. Optional for version comparison to skip deployment of some components that have already been installed.
#
{%- if nuage_software_version is defined %}
nuage_software_version: "{{ nuage_software_version }}"
{%- else %}
# nuage_software_version: ""
{%- endif %}
{%- endif %}

{%- if show_target_server_type | default('kvm') == 'kvm' %}

##### PoC Parameters

# < VSD Disk Size >
# Amount of VSD disk space to allocate, in GB. Valid only for KVM deployments. Note: Values smaller than the default are for lab and PoC only. Production deployments must use a value greater than or equal to the default.
#
{%- if vsd_fallocate_size_gb is defined %}
vsd_fallocate_size_gb: {{ vsd_fallocate_size_gb }}
{%- else %}
# vsd_fallocate_size_gb: 285
{%- endif %}
{%- endif %}

{%- if show_target_server_type | default('kvm') == 'kvm' %}

# < VSD RAM >
# Amount of VSD RAM to allocate, in GB. Valid only for KVM deployments. Note: Values smaller than the default are for lab and PoC only. Production deployments must use a value greater than or equal to the default.
#
{%- if vsd_ram is defined %}
vsd_ram: {{ vsd_ram }}
{%- else %}
# vsd_ram: 24
{%- endif %}
{%- endif %}

{%- if show_target_server_type | default('kvm') == 'kvm' %}

# < VSC RAM >
# Amount of VSC RAM to allocate, in GB. Valid only for KVM deployments. Note: Values smaller than the default are for lab and PoC only. Production deployments must use a value greater than or equal to the default.
#
{%- if vsc_ram is defined %}
vsc_ram: {{ vsc_ram }}
{%- else %}
# vsc_ram: 4
{%- endif %}
{%- endif %}

{%- if show_target_server_type | default('kvm') == 'kvm' %}

# < VSTAT RAM >
# Amount of VSTAT RAM to allocate, in GB. Valid only for KVM deployments. Note: Values smaller than the default are for lab and PoC only. Production deployments must use a value greater than or equal to the default.
#
{%- if vstat_ram is defined %}
vstat_ram: {{ vstat_ram }}
{%- else %}
# vstat_ram: 16
{%- endif %}

####################
{%- endif %}

{%- if show_target_server_type | default('kvm') == 'kvm' %}

# < VCIN RAM >
# Amount of VCIN RAM to allocate, in GB. Valid only for KVM deployments. Note: Values smaller than the default are for lab and PoC only. Production deployments must use a value greater than or equal to the default.
#
{%- if vcin_ram is defined %}
vcin_ram: {{ vcin_ram }}
{%- else %}
# vcin_ram: 24
{%- endif %}
{%- endif %}

{%- if show_target_server_type | default('kvm') == 'kvm' %}

# < Portal RAM >
# Amount of Portal RAM to allocate, in GB. Valid only for KVM deployments. Note: Values smaller than the default are for lab and PoC only. Production deployments must use a value greater than or equal to the default.
#
{%- if portal_ram is defined %}
portal_ram: {{ portal_ram }}
{%- else %}
# portal_ram: 24
{%- endif %}
{%- endif %}

{%- if show_target_server_type | default('kvm') == 'kvm' %}

# < VSD CPU cores >
# Number of CPU's for VSD. Valid only for KVM deployments
#
{%- if vsd_cpu_cores is defined %}
vsd_cpu_cores: {{ vsd_cpu_cores }}
{%- else %}
# vsd_cpu_cores: 6
{%- endif %}
{%- endif %}

{%- if show_target_server_type | default('kvm') == 'kvm' %}

# < VSTAT CPU cores >
# Number of CPU's for VSTAT. Valid only for KVM deployments
#
{%- if vstat_cpu_cores is defined %}
vstat_cpu_cores: {{ vstat_cpu_cores }}
{%- else %}
# vstat_cpu_cores: 6
{%- endif %}
{%- endif %}

{%- if show_target_server_type | default('kvm') == 'kvm' %}

# < VNSUTIL CPU cores >
# Number of CPU's for VNSUTIL. Valid only for KVM deployments
#
{%- if vnsutil_cpu_cores is defined %}
vnsutil_cpu_cores: {{ vnsutil_cpu_cores }}
{%- else %}
# vnsutil_cpu_cores: 2
{%- endif %}
{%- endif %}

{%- if show_target_server_type | default('kvm') == 'kvm' %}

# < VCIN CPU cores >
# Number of CPU's for VCIN. Valid only for KVM deployments
#
{%- if vcin_cpu_cores is defined %}
vcin_cpu_cores: {{ vcin_cpu_cores }}
{%- else %}
# vcin_cpu_cores: 6
{%- endif %}
{%- endif %}

{%- if show_target_server_type | default('kvm') == 'kvm' %}

# < Portal vm CPU cores >
# Number of CPU's for Portal vm. Valid only for KVM deployments
#
{%- if portal_cpu_cores is defined %}
portal_cpu_cores: {{ portal_cpu_cores }}
{%- else %}
# portal_cpu_cores: 6
{%- endif %}
{%- endif %}

##### VSD Authentication

# < VSD Architect URL >
# VSD Architect URL. Required for tasks during Upgrade, Health Checks etc
#
{%- if vsd_auth_url is defined %}
vsd_auth_url: "{{ vsd_auth_url }}"
{%- else %}
# vsd_auth_url: https://(vsd_fqdn):8443
{%- endif %}

# < VSD Enterprise >
# Enterprise name used for authentication with VSD Architect. Required for tasks during Upgrade, Health Checks etc
#
{%- if vsd_auth_enterprise is defined %}
vsd_auth_enterprise: "{{ vsd_auth_enterprise }}"
{%- else %}
# vsd_auth_enterprise: csp
{%- endif %}

########################

##### VCIN Authentication

# < VCIN URL >
# VCIN URL used for API interaction. Required for tasks like VRS-E upgrade (through VCIN)
#
{%- if vcin_auth_url is defined %}
vcin_auth_url: "{{ vcin_auth_url }}"
{%- else %}
# vcin_auth_url: https://(vcin_ip_address):8443
{%- endif %}

# < VCIN Enterprise >
# Enterprise name used for authentication with VCIN. Required for tasks like VRS-E upgrade (through VCIN)
#
{%- if vcin_auth_enterprise is defined %}
vcin_auth_enterprise: "{{ vcin_auth_enterprise }}"
{%- else %}
# vcin_auth_enterprise: csp
{%- endif %}

#########################

##### Libnetwork

# < Libnetwork scope >
# Scope of libnetworking support; local: connectivity between containers is limited to within the local host; global: connectivity between containers may span across hosts in the cluster
# (local, global) 
#
{%- if libnetwork_scope is defined %}
libnetwork_scope: "{{ libnetwork_scope }}"
{%- else %}
# libnetwork_scope: local
{%- endif %}

# < Libnetwork cluster store URL scheme >
# Scheme portion of the URL pointing to the key-value store used for the Libnetwork cluster
#
{%- if libnetwork_cluster_store_scheme is defined %}
libnetwork_cluster_store_scheme: "{{ libnetwork_cluster_store_scheme }}"
{%- else %}
# libnetwork_cluster_store_scheme: consul
{%- endif %}

# < Libnetwork cluster store URL host >
# Host portion of the URL pointing to the key-value store used for the Libnetwork cluster
#
{%- if libnetwork_cluster_store_host is defined %}
libnetwork_cluster_store_host: "{{ libnetwork_cluster_store_host }}"
{%- else %}
# libnetwork_cluster_store_host: NONE
{%- endif %}

# < Libnetwork cluster store URL port >
# Port portion of the URL pointing to the key-value store used for the Libnetwork cluster
#
{%- if libnetwork_cluster_store_port is defined %}
libnetwork_cluster_store_port: {{ libnetwork_cluster_store_port }}
{%- else %}
# libnetwork_cluster_store_port: 8500
{%- endif %}

################

##### MetroAE Config

# < User Data File or Path >
# File or path containing the user data to be applied to the VSD
#
{%- if user_data_path is defined %}
user_data_path: "{{ user_data_path }}"
{%- else %}
# user_data_path: ""
{%- endif %}

# < VSD Templates Folder >
# Full Path to the MetroAE Config templates folder
#
{%- if vsd_template_path is defined %}
vsd_template_path: "{{ vsd_template_path }}"
{%- else %}
# vsd_template_path: ""
{%- endif %}

# < VSD API specifications folder >
# Full Path to the VSD API specifications folder
#
{%- if vsd_api_spec_path is defined %}
vsd_api_spec_path: "{{ vsd_api_spec_path }}"
{%- else %}
# vsd_api_spec_path: ""
{%- endif %}

####################

