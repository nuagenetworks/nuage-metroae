
- name: Set local variable with vmname
  set_fact:
    vm_name: "{{ vmname }}"

- name: Setup KVM on target server
  include_role:
    name: common
    tasks_from: setup-kvm
  vars:
    required_bridges:
      - mgmt
      - data

- include_role:
    name: check-node-running

- name: Display if skipping VNSUTIL predeploy
  debug:
    msg:
      - "********************************************************"
      - "Skipping VNSUTIL predeploy because it is already present"
      - "********************************************************"
  when: vnsutil_present

- block:

  - include_role:
      name: common
      tasks_from: copy-qcow2

  - name: Set local variable with vnsutil guestfish destination
    set_fact:
      guestfish_dest: "{{ images_path }}/{{ vm_name }}/{{ image_file_name }}"

  - name: Get guestfish mount for qcow2
    include_role:
      name: common
      tasks_from: get-guestfish-mount
    vars:
      guestfish_qcow2_path: "{{ guestfish_dest }}"

  - name: Verify that mount was found
    assert:
      that: "guestfish_mount is defined"
      msg: "guestfish mount point was not found. Are you using the correct qcow2 file?"

  - name: Create a temporary copy of the network script for eth0
    template:
      src: ifcfg-eth0.j2
      backup: no
      dest: "{{ images_path }}/{{ vmname }}/ifcfg-eth0"

  - name: Inject ifcfg-eth0 into vnsutil qcow image
    include_role:
      name: common
      tasks_from: kvm-inject-file
    vars:
      dest_file_name: ifcfg-eth0
      dest_path: /etc/sysconfig/network-scripts

  - name: Remove cloud-init files to stop it from overwriting our network config (ignoring errors)
    command: guestfish --rw -a {{ guestfish_dest }} -m {{ guestfish_mount }} glob rm-rf /etc/systemd/system/multi-user.target.wants/cloud-*.service
    ignore_errors: true

  - block:

    - name: Create a temporary copy of the network script for eth1
      template:
        src: ifcfg-eth1.j2
        backup: no
        dest: "{{ images_path }}/{{ vmname }}/ifcfg-eth1"

    - name: Inject ifcfg-eth1 into vnsutil qcow image
      include_role:
        name: common
        tasks_from: kvm-inject-file
      vars:
        dest_file_name: ifcfg-eth1
        dest_path: /etc/sysconfig/network-scripts

    when: data_ip is defined or data_subnet is defined or data_netmask is defined

  - name: Create a temporary copy of the syscfg network file
    template:
      src: "{{ role_path }}/../common/templates/network.j2"
      dest: "{{ images_path }}/{{ vm_name }}/network"
      backup: no

  - name: Inject network into VSD qcow image
    include_role:
      name: common
      tasks_from: kvm-inject-file
    vars:
      dest_file_name: network
      dest_path: /etc/sysconfig

  - block:

    - name: Create a temporary copy of the network script for route-eth1
      template:
        src: route-eth1.j2
        backup: no
        dest: "{{ images_path }}/{{ vmname }}/route-eth1"

    - name: Inject route-eth1 into vnsutil qcow image
      include_role:
        name: common
        tasks_from: kvm-inject-file
      vars:
        dest_file_name: route-eth1
        dest_path: /etc/sysconfig/network-scripts/

    when: data_gateway is defined and data_static_route is defined

  - name: Get the public key for the current user
    local_action: command cat "{{ user_ssh_pub_key }}"
    register: current_user_ssh_key

  - name: Inject SSH keys into vnsutil qcow image
    include_role:
      name: common
      tasks_from: kvm-inject-ssh-keys

  - name: Define and start vnsutil VM
    include_role:
      name: common
      tasks_from: kvm-start-vm
    vars:
      vm_xml: "{{ lookup('template', 'vnsutil.xml.j2') }}"
      autostart_enabled: false

  delegate_to: "{{ target_server }}"
  remote_user: "{{ target_server_username }}"
  become: "{{ 'no' if target_server_username == 'root' else 'yes' }}"
  when: not vnsutil_present
