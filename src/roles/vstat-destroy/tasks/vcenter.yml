---
- name: Finding VM folder (ignoring errors)
  connection: local
  vmware_guest_find:
    hostname: "{{ target_server }}"
    username: "{{ vcenter.username }}"
    password: "{{ vcenter.password }}"
    datacenter: "{{ vcenter.datacenter }}"
    name: "{{ vm_name }}"
    validate_certs: no
  register: vstat_vm_folder
  ignore_errors: yes

- name: Gathering info on VM (ignoring errors)
  connection: local
  vmware_guest_info:
    hostname: "{{ target_server }}"
    username: "{{ vcenter.username }}"
    password: "{{ vcenter.password }}"
    datacenter: "{{ vcenter.datacenter }}"
    folder: "/{{ vcenter.datacenter }}{{ vstat_vm_folder['folders'][0] }}"
    name: "{{ vm_name }}"
    validate_certs: no
  register: vstat_vm_facts
  ignore_errors: yes
  when: vstat_vm_folder is succeeded

- debug: var=vstat_vm_facts verbosity=1

- name: Check for exceptions in VSTAT Vm facts
  fail: msg="Exception found {{ vstat_vm_facts.exception }}"
  when: vstat_vm_facts.exception is defined

- block:

  - name: Get Facts of VM
    vmware_vm_info:
      hostname: "{{ target_server }}"
      username: "{{ vcenter.username }}"
      password: "{{ vcenter.password }}"
      validate_certs: no
    delegate_to: localhost
    register: vm_info

  - debug: var=vm_info

  - name: Set uuid fact
    set_fact:
      uuid: "{{ item.uuid }}"
    when: item.guest_name == vm_name
    with_items: "{{ vm_info.virtual_machines }}"

  - debug: var=uuid

  - name: Turn off autostart
    connection: local
    vmware_autostart:
      name: "{{ vm_name }}"
      uuid: "{{ uuid }}"
      hostname: "{{ target_server }}"
      username: "{{ vcenter.username }}"
      password: "{{ vcenter.password }}"
      state: disable
      validate_certs: no

  - name: Power off the Stats VM
    connection: local
    vmware_guest:
      hostname: "{{ target_server }}"
      username: "{{ vcenter.username }}"
      password: "{{ vcenter.password }}"
      validate_certs: no
      datacenter: "{{ vcenter.datacenter }}"
      folder: "/{{ vcenter.datacenter }}{{ vstat_vm_folder['folders'][0] }}"
      name: "{{ vm_name }}"
      state: "poweredoff"
    when: vstat_vm_facts['instance']['hw_power_status'] == 'poweredOn'

  - name: Removing the Stats VM
    connection: local
    vmware_guest:
      hostname: "{{ target_server }}"
      username: "{{ vcenter.username }}"
      password: "{{ vcenter.password }}"
      validate_certs: no
      datacenter: "{{ vcenter.datacenter }}"
      folder: "/{{ vcenter.datacenter }}{{ vstat_vm_folder['folders'][0] }}"
      name: "{{ vm_name }}"
      state: "absent"
    when: (not preserve_vm | default( False ))

  when: vstat_vm_folder is succeeded and vstat_vm_facts is succeeded
