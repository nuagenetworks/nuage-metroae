---
- name: Clean known_hosts of VSD's (ignoring errors)
  known_hosts:
    name: "{{ hostname }}"
    state: absent
  delegate_to: localhost
  no_log: "{{ lookup('env', 'METROAE_NO_LOG') or 'true' }}"
  ignore_errors: True

- name: Wait for VSD ssh to be ready
  include_role:
    name: common
    tasks_from: wait-for-ssh
  vars:
    ssh_host: "{{ hostname }}"
    host_username: "{{ vsd_default_username }}"

- name: "Check if monit is already configured (ignoring errors)"
  command: monit summary
  ignore_errors: yes
  register: monit_result
  remote_user: "{{ vsd_default_username }}"

- name: Read the VSD version
  shell: echo $VSD_VERSION
  register: vsd_version
  remote_user: "{{ vsd_default_username }}"

- name: Set if VSD versions match image file
  set_fact: vsd_versions_match="{{ vsd_version.stdout == image_file_name | regex_search('([0-9]+\\.[0-9]+\\.[0-9A-Za-z]+)') }}"
  when: image_file_name is defined

- name: Set if VSD versions match optional input version
  set_fact: vsd_versions_match="{{ vsd_version.stdout == nuage_software_version }}"
  when: nuage_software_version is defined

- name: Set if skipping VSD deploy
  set_fact: skip_vsd_deploy="{{ vsd_versions_match is defined and vsd_versions_match and monit_result.rc == 0 }}"

- name: Display if skipping VSD deploy
  debug:
    msg:
      - "*************************************************"
      - "Skipping VSD deploy because it is already running"
      - "*************************************************"
  when: skip_vsd_deploy

- name: Set VSD Credentials
  import_tasks: set_vsd_creds.yml
  when: not skip_vsd_deploy

- block:

  - block:

    - name: Force DHCP update to configure DNS in AWS (ignoring errors)
      command: dhclient
      ignore_errors: true

    - name: Set hostname for AWS for current session
      command: "hostname {{ hostname }}"

    - name: Set hostname for AWS permanently
      shell: "echo {{ hostname }} > /etc/hostname"

    when: target_server_type is match("aws")

  - name: Set Major, Minor and Patch VSD version
    set_fact:
        vsd_major_version: "{{ vsd_version.stdout.split('.')[0] }}"
        vsd_minor_version: "{{ vsd_version.stdout.split('.')[1] }}"
        vsd_patch_version: "{{ vsd_version.stdout.split('.')[2].split('U')[0] }}"

  - block:

    - name: Set VSD numbering for cluster install
      set_fact:
          first_cluster_node_to_install: "{{ groups['vsd_ha_node1'][0] }}"
          second_cluster_node_to_install: "{{ groups['vsd_ha_node2'][0] }}"
          third_cluster_node_to_install: "{{ groups['vsd_ha_node3'][0] }}"
      when:
        - not nuage_upgrade | default(False)
        - not vsd_standby_cluster | default(False)

    - name: Set VSD numbering for standby cluster install
      set_fact:
          first_cluster_node_to_install: "{{ groups['vsd_standby_node1'][0] }}"
          second_cluster_node_to_install: "{{ groups['vsd_standby_node2'][0] }}"
          third_cluster_node_to_install: "{{ groups['vsd_standby_node3'][0] }}"
      when:
        - vsd_standby_cluster | default(False)

    - name: Set VSD numbering for cluster upgrade
      set_fact:
          first_cluster_node_to_install: "{{ groups['vsd_ha_node2'][0] }}"
          second_cluster_node_to_install: "{{ groups['vsd_ha_node3'][0] }}"
          third_cluster_node_to_install: "{{ groups['vsd_ha_node1'][0] }}"
      when:
        - nuage_upgrade | default(False)
        - not vsd_standby_cluster | default(False)

    - block:

      - name: Run RTT tests for within and between VSD clusters
        import_role:
          name: vsd-run-rtt
        vars:
          first_node: "{{ first_cluster_node_to_install }}"
          second_node: "{{ second_cluster_node_to_install }}"
          third_node: "{{ third_cluster_node_to_install }}"
          standby_cluster: "{{ vsd_standby_cluster | default(false) }}"

      - name: Set fact that VSD RTT Test ran
        set_fact:
          vsd_ran_rtt_test: true

      when:
        - inventory_hostname == first_cluster_node_to_install
        - not nuage_upgrade | default(False)
        - vsd_run_cluster_rtt_test | default(False)

    when: vsd_sa_or_ha is match('ha')

  - name: Set deploy_vcin to false (deploy vsd)
    set_fact:
      deploy_vcin: false

  - name: Overwrite deploy_vcin to true (deploy vcin)
    set_fact:
      deploy_vcin: true
    when:
      - vcin_mode is defined
      - vcin_mode
      - (vsd_major_version|int > 5) or
        (vsd_major_version|int >= 5 and vsd_minor_version|int > 2) or
        (vsd_major_version|int >= 5 and vsd_minor_version|int >= 2 and vsd_patch_version|int >= 2)

  - name: Assert that vcin_mode is not true if version less than 5.2.2
    assert:
      that: deploy_vcin or not (vcin_mode|default(False))
      msg:  "MetroAE does not support the installation of VCIN for versions less than 5.2.2. Quitting"

  remote_user: "{{ vsd_default_username }}"

- name: Execute OpenStack tasks for the deploy
  import_tasks: openstack.yml
  when: not skip_vsd_deploy and target_server_type is match("openstack")
  tags:
    - vsd
    - openstack
    - vsd-deploy

- block:

  - block:

    - name: Handle ssh key generation and copying for root user
      import_tasks: legacy_cluster_ssh_keys.yml
      run_once: True
      when: vsd_major_version | int < 5

    - name: Handle ssh key generation and copying for vsd user
      import_tasks: cluster_ssh_keys.yml
      when: vsd_major_version | int >= 5

    when: vsd_sa_or_ha is match('ha')

  - name: Update /etc/hosts file with VSD entries
    lineinfile:
      dest: /etc/hosts
      line: "{{ hostvars[item]['mgmt_ip'] }}    {{ hostvars[item]['hostname'] }}"
    with_items: "{{ groups['vsds'] }}"

  - name: Update /etc/hosts file with VCIN entries
    lineinfile:
      dest: /etc/hosts
      line: "{{ hostvars[item]['mgmt_ip'] }}    {{ hostvars[item]['hostname'] }}"
    with_items: "{{ groups['vcins'] }}"
    when: deploy_vcin

  - block:

    - name: Generate SSH key on master VCIN
      user:
        name: "{{ vsd_default_username }}"
        generate_ssh_key: yes
      register: master_vcin_ssh_key
      delegate_to: "{{ master_vcin }}"

    - name: Generate SSH key on slave VCIN
      user:
        name: "{{ vsd_default_username }}"
        generate_ssh_key: yes
      register: slave_vcin_ssh_key

    - name: Add master VCIN SSH key to slave VCIN
      authorized_key:
          key: "{{ master_vcin_ssh_key.ssh_public_key }}"
          user: "{{ vsd_default_username }}"

    - name: Add slave VCIN SSH key to master VCIN
      authorized_key:
          key: "{{ slave_vcin_ssh_key.ssh_public_key }}"
          user: "{{ vsd_default_username }}"
      delegate_to: "{{ master_vcin }}"

    when: master_vcin is defined

  - name: Configure yum proxy
    lineinfile:
      dest: /etc/yum.conf
      regexp: "^proxy="
      line: "proxy={{ yum_proxy }}"
    when: yum_proxy is not match('NONE')

  - name: Execute a yum update (Can take 20 minutes)
    yum:
      name: '*'
      state: latest
    when: yum_update

  - name: Disable cloud-init on VSD, to avoid boot time delays
    command: "{{ item }}"
    with_items:
      - systemctl disable cloud-init
      - systemctl disable cloud-init-local
      - systemctl disable cloud-config
      - systemctl disable cloud-final

  - name: Configure ntpd and ntpdate and local time zone
    include_role:
      name: common
      tasks_from: linux-ntp-sync
    vars:
      rem_user: "{{ vsd_default_username }}"

  - name: Enable IPv6 on VSD
    command: /opt/vsd/bin/vsd-switch-ipv6.sh
    when: enable_ipv6 | default(False) == True

  - block:

    - name: Test VSD Disk IOPS
      include_role:
        name: common
        tasks_from: disk-performance-test.yml
      vars:
        disk_performance_file_total_size: "{{ vsd_disk_performance_test_total_file_size }}"
        disk_performance_minimum_threshold: "{{ vsd_disk_performance_test_minimum_threshold }}"
        disk_performance_max_time: "{{ vsd_disk_performance_test_max_time }}"
        ignore_disk_performance_test_errors: "{{ vsd_ignore_disk_performance_test_errors }}"

    - name: Set fact that VSD Disk Performance Test ran
      set_fact:
        vsd_ran_disk_performance_test: true

    when: vsd_run_disk_performance_test

  - block:

    - name: Install VSD software on standalone node (Can take 20 minutes)
      command: "/opt/vsd/vsd-install.sh -t s -y {{ (enable_ipv6 | default(False) == True) | ternary('-6', '') }}"
      when: not deploy_vcin

    - name: Install VCIN software on VCIN node (Can take 20 minutes)
      command: "/opt/vsd/vsd-install.sh -t v -y {{ (enable_ipv6 | default(False) == True) | ternary('-6', '') }}"
      when: deploy_vcin

    when:
      - vsd_sa_or_ha is match ('sa')
      - master_vcin is not defined

  - block:

    - block:

      - name: Get monit summary for master VCIN processes prior to starting replication
        vsd_monit:
          group: all
        register: vcin_proc_pre

      - name: Wait for master VCIN processes to become running
        monit_waitfor_service:
          name: "{{ vcin_proc_pre['state'].keys() }}"
          timeout_seconds: 1200
          test_interval_seconds: 10

      - name: Preparing the master
        command: /opt/vsd/bin/vsd-prepare-replication-master-cluster.sh

      - name: Preparing replication on the master
        command: "/opt/vsd/bin/vsd-prepare-replication-master.sh -a {{ inventory_hostname }}"

      delegate_to: "{{ master_vcin }}"

    - name: Creating the data folder on the slave
      file:
        path: /opt/vsd/data/
        state: directory

    - name: Syncing the backup from the master to the local system
      delegate_to: "{{ master_vcin }}"
      synchronize:
          dest: /opt/vsd/data/
          src: /tmp/backup/
          mode: push

    - name: Install VCIN software on slave VCIN node
      command: "/opt/vsd/vsd-install.sh -t v -y {{ (enable_ipv6 | default(False) == True) | ternary('-6', '') }}"

    - name: Start the replication
      command: "/opt/vsd/bin/vsd-start-replication-slave -m {{ master_vcin }}"

    when:
      - vsd_sa_or_ha is match ('sa')
      - deploy_vcin
      - master_vcin is defined

  - block:

    - name: Install VSD software on the first cluster node (Can take 20 minutes)
      command: "/opt/vsd/vsd-install.sh -t 1 -a {{ first_cluster_node_to_install }} -b {{ second_cluster_node_to_install }} -c {{third_cluster_node_to_install}} -x {{vsd_fqdn}} -y {{ (enable_ipv6 | default(False) == True) | ternary('-6', '') }}"
      when: inventory_hostname == first_cluster_node_to_install

    - name: Install VSD software on the second cluster node (Can take 20 minutes)
      command: "/opt/vsd/vsd-install.sh -1 {{ first_cluster_node_to_install }} -t 2 -x {{ vsd_fqdn }} -y {{ (enable_ipv6 | default(False) == True) | ternary('-6', '') }}"
      when: inventory_hostname == second_cluster_node_to_install

    - name: Install VSD software on the third cluster node (Can take 20 minutes)
      command: "/opt/vsd/vsd-install.sh -1 {{ first_cluster_node_to_install }} -t 3 -x {{ vsd_fqdn }} -y {{ (enable_ipv6 | default(False) == True) | ternary('-6', '') }}"
      when: inventory_hostname == third_cluster_node_to_install

    when: vsd_sa_or_ha is match('ha')

  - name: Set XMPP connection to allow both clear and TLS
    command: /opt/vsd/bin/ejmode allow -y
    when: not deploy_vcin

  remote_user: "{{ vsd_default_username }}"

- import_tasks: brand_vsd.yml
  when:
    - not skip_vsd_deploy
    - branding_zip_file is defined
    - component_type == "vsd"
    - not vsd_standby_cluster | default(False)

- name: Setup health monitoring
  include_role:
    name: setup-health-monitoring
  vars:
    component_username: "{{ vsd_default_username }}"
  when:
    - not skip_vsd_deploy
    - health_monitoring_agent | default("none") != "none"

- block:

  - name: Get monit summary for all process on VSD
    vsd_monit:
      group: all
    register: proc_list

  - name: Set fact to skip testing ejabberd cluster status services
    set_fact:
      remove_list:
        - "ejabberd-cluster-status"

  - name: Set fact to skip testing ejabberd cluster and vstat services during upgrade
    set_fact:
      remove_list:
        - "stats-collector-status"
        - "tca-daemon-status"
        - "vsd-stats-status"
        - "ejabberd-cluster-status"
    when: nuage_upgrade | default(false)

  - name: wait for VSD common, core and stats services to become running
    monit_waitfor_service:
      name: "{{ proc_list['state'].keys() | difference(remove_list) }}"
      timeout_seconds: 1200
      test_interval_seconds: 30

  when:
    - component_type == "vsd"
    - (vsd_major_version|int > 5) or
      (vsd_major_version|int == 5 and vsd_minor_version|int >= 3)
  remote_user: "{{ vsd_default_username }}"

- name: Install nginx
  yum:
    name: nginx
    state: latest
  remote_user: "{{ vsd_default_username }}"
  when:
    - vstats is defined
    - not skip_vsd_deploy
    - target_server_type is match("nuagex")
