---
# TODO:
# Check for existing stack or vms

- name: Display if skipping VSD predeploy
  debug:
    msg:
      - "****************************************************"
      - "Skipping VSD predeploy because it is already present"
      - "****************************************************"
  when: node_present

- block:
  - name: Get the public key for the current user
    local_action: command cat "{{ user_ssh_pub_key }}"
    register: current_user_ssh_key

  - name: Get heat stack for fixed ip deployments
    set_fact:
      vsd_heat_template: "{{ role_path }}/files/vsd_fixed.yml"
    when: dhcp == False

  - name: Get heat stack for dhcp based deployments
    set_fact:
      vsd_heat_template: "{{ role_path }}/files/vsd.yml"
    when: dhcp == True

  - name: Creating VSD stack
    register: create_stack
    os_stack:
      name: "{{ stack_name | default(inventory_hostname) }}"
      template: "{{ vsd_heat_template }}"
      auth:
        "{{ os_auth }}"
      parameters:
        vm_name: "{{inventory_hostname}}"
        vsd_image: "{{ vsd_image }}"
        vsd_flavor: "{{ vsd_flavor }}"
        vsd_network: "{{ vsd_network }}"
        vsd_subnet: "{{ vsd_subnet | default('NONE') }}"
        mgmt_ip: "{{ mgmt_ip | default('NONE') }}"
        ssh_key: "{{ current_user_ssh_key.stdout }}"
    delegate_to: 127.0.0.1
  - debug: var=create_stack['stack']['outputs'][0]['output_value']

  - name: Update /etc/hosts file on ansible host
    lineinfile:
      dest: /etc/hosts
      line: "{{ create_stack['stack']['outputs'][0]['output_value'] }}    {{ inventory_hostname }}"
    delegate_to: 127.0.0.1

  when: not node_present
