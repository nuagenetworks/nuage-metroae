- name: Clean known_hosts of VSTATs (ignoring errors)
  known_hosts:
    name: "{{ mgmt_ip }}"
    state: absent
  delegate_to: localhost
  no_log: "{{ lookup('env', 'METROAE_NO_LOG') or 'true' }}"
  ignore_errors: True

- import_tasks: report_header.yml

- block:

  - name: Get current network config of all VSTAT nodes
    network_info:
      mac_addr: False
    register: net_conf
    remote_user: "{{ vstat_username | default(vstat_default_username) }}"

  - name: Print network config when verbosity >= 1
    debug: var=net_conf.info verbosity=1

  - block:

    - name: Write network config to json file
      nuage_append: filename="{{ report_path }}" text="{{ net_conf.info | to_nice_json}}\n"

    - name: Check web interface of vstat (ignoring errors)
      uri:
        url: http://{{ inventory_hostname }}:9200
        method: GET
        user: "{{ vstat_username | default(vstat_default_username) }}"
        password: "{{ vstat_password | default(vstat_default_password) }}"
        status_code: 200
        validate_certs: False
      register: webresult
      ignore_errors: yes

    - name: Write web interface result
      nuage_append: filename="{{ report_path }}" text="{{ webresult  | to_nice_json}}\n"

    - block:

      - name: Check VSS UI of vstat
        uri:
          url: https://{{ inventory_hostname }}:6200
          method: GET
          status_code: 200
          validate_certs: False
        register: vss_ui_result

      - name: Write VSS UI result
        nuage_append: filename="{{ report_path }}" text="{{ vss_ui_result | to_nice_json}}\n"

      when: enable_vss_ui | default(False)

    delegate_to: localhost

  when: inventory_hostname in groups['vstats']

- import_tasks: monit_status.yml
  when: inventory_hostname in groups['vsds']

- import_tasks: report_footer.yml
