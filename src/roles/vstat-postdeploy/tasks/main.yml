- name: Clean known_hosts of VSTATs (ignoring errors)
  known_hosts:
    name: "{{ mgmt_ip }}"
    state: absent
  delegate_to: localhost
  no_log: "{{ lookup('env', 'METROAE_NO_LOG') or 'true' }}"
  ignore_errors: True

- name: Stat the pid file for elasticsearch process
  stat: path=/var/run/elasticsearch/elasticsearch.pid
  register: pid

- name: Verify that the elasticsearch pid file exists
  assert:
    that: "pid.stat.exists"
    msg: "Pid file for elastic search note found, quiting"

- name: Get status of elasticsearch process
  command: systemctl is-active elasticsearch
  register: es_process_status

- name: Verify that elasticsearch status is active
  assert:
    that: "es_process_status.stdout=='active'"
    msg: "Elasticsearch status is {{ es_process_status.stdout }}, quiting"

- name: Check the status of shards being processed
  uri:
    url: "http://localhost:9200/_cluster/health?pretty"
    method: GET
  register: es_health
  until: es_health.json.unassigned_shards == 0
  retries: 60
  delay: 10

- name: Check the ES status color
  uri:
    url: "http://localhost:9200/_cluster/health?pretty"
    method: GET
  register: es_status
  until: es_status.json.status == 'green'
  retries: 60
  delay: 10

- name: Check VSS UI of vstat
  uri:
    url: https://{{ inventory_hostname }}:6200
    method: GET
    status_code: 200
    validate_certs: False
  delegate_to: localhost
  when: enable_vss_ui | default(False)

- block:

  - name: Check cluster_name
    assert:
      that: "es_status.json.cluster_name == 'nuage_elasticsearch'"
      msg: "Incorrect cluster_name {{ es_status.json.cluster_name }}. Quitting."

  - name: Check number_of_nodes
    assert:
      that: "es_status.json.number_of_nodes == 3"
      msg: "Incorrect number_of_nodes {{ es_status.json.number_of_nodes }}. Quitting."

  when: vstat_sa_or_ha is match('ha')
