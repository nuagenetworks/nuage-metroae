---
- name: Set local variable with vmname
  set_fact:
    vm_name: "{{ vmname }}"

- name: Setup KVM on target server
  include_role:
    name: common
    tasks_from: setup-kvm
  vars:
    required_bridges:
      - mgmt

- include_role:
    name: check-node-running

- name: Display if skipping predeploy
  debug:
    msg:
      - "******************************************************"
      - "Skipping NUH VM creation because it is already present"
      - "******************************************************"
  when: node_running

- block:

  - name: set skip copy images to default
    set_fact:
      image_present: False
    when: image_present is undefined

  - name: Check to make sure there is an existing qcow image
    stat:
      path: "{{ images_path }}/{{ vm_name }}/{{ image_file_name }}"
    register: statResult

  - name: Check the result of image find command
    set_fact:
      image_present: True
    when: statResult.stat.exists == True

  - name: Image stat result
    debug: var=statResult

  - name: Image find result
    debug: var=image_present

  - include_role:
      name: common
      tasks_from: copy-qcow2
    when: not image_present

  - name: Set local variable with portal guestfish destination
    set_fact:
      guestfish_dest: "{{ images_path }}/{{ vm_name }}/{{ image_file_name }}"

  - name: Get guestfish mount for qcow2
    include_role:
      name: common
      tasks_from: get-guestfish-mount
    vars:
      guestfish_qcow2_path: "{{ guestfish_dest }}"

  - name: Verify that mount was found
    assert:
      that: "guestfish_mount is defined"
      msg: "guestfish mount point was not found. Are you using the correct qcow2 file?"

  - name: Create a temporary copy of the network script for eth0
    template:
      src: ifcfg-eth0.j2
      backup: no
      dest: "{{ images_path }}/{{ vm_name }}/ifcfg-eth0"

  - name: Inject ifcfg-eth0 into NUH qcow image
    include_role:
      name: common
      tasks_from: kvm-inject-file
    vars:
      dest_file_name: ifcfg-eth0
      dest_path: /etc/sysconfig/network-scripts

  - name: Create a temporary copy of the syscfg network file
    template:
      src: "{{ role_path }}/../common/templates/network.j2"
      dest: "{{ images_path }}/{{ vm_name }}/network"
      backup: no

  - name: Inject network into NUH qcow image
    include_role:
      name: common
      tasks_from: kvm-inject-file
    vars:
      dest_file_name: network
      dest_path: /etc/sysconfig

  - name: Create a temporary copy of the hostname file
    template:
      src: "{{ role_path }}/../common/templates/hostname.j2"
      backup: no
      dest: "{{ images_path }}/{{ vm_name }}/hostname"

  - name: Inject hostname into NUH qcow image
    include_role:
      name: common
      tasks_from: kvm-inject-file
    vars:
      dest_file_name: hostname
      dest_path: /etc

  - name: Get the public key for the current user
    local_action: command cat "{{ user_ssh_pub_key }}"
    register: current_user_ssh_key

  - name: Inject SSH keys into VSD qcow image
    include_role:
      name: common
      tasks_from: kvm-inject-ssh-keys

  - name: Set the SSH not to use DNS
    command: guestfish --rw -a {{ guestfish_dest }} -m {{ guestfish_mount }} echo "UseDNS no" >> /etc/ssh/sshd_config

  - name: Disable SELinux
    command: guestfish --rw -a {{ guestfish_dest }} -m {{ guestfish_mount }} sh "sed -i 's/SELINUX\=enforcing/SELINUX\=permissive/g' /etc/selinux/config"

  - name: Define and start NUH VM
    include_role:
      name: common
      tasks_from: kvm-start-vm
    vars:
      vm_xml: "{{ lookup('template', 'nuh.xml.j2') }}"
      autostart_enabled: true

  when: not node_running
  delegate_to: "{{ target_server }}"
  remote_user: "{{ target_server_username }}"
  become: "{{ 'no' if target_server_username == 'root' else 'yes' }}"
