---
- meta: reset_connection

- name: Wait for VSC ssh to be ready
  include_role:
    name: common
    tasks_from: wait-for-ssh-port
  vars:
    ssh_host: "{{ vsc_creds.host }}"
    ssh_password: "{{ vsc_creds.password }}"
    ssh_user: "{{ vsc_creds.username }}"
    check_login: True

- meta: reset_connection

- name: Get output of 'show vswitch-controller information' on VSC
  sros_command:
    commands:
      - show vswitch-controller information
    provider: "{{ vsc_creds }}"
  delegate_to: localhost
  register: vsc_info


- name: Create local variable with VSC vswitch-controller information in json
  set_fact:
    vsc_info_out: "{{ vsc_info.stdout[0] }}"


- name: Check proper connectivity to VSTAT
  assert:
    that: "vsc_info_out | regex_search('Statistics Enabled *: True')"

- name: Check if all Primary VSDs are registered
  assert:
   that:
    - "vsc_info_out  | regex_search('Stats Server [0-9] Address *: {{ hostvars[item].mgmt_ip }}')"
  with_items: "{{ groups['primary_vsds'] }}"
  when: not stats_out | default(False)

- name: Check if all Stats only VSDs are registered
  assert:
   that:
    - "vsc_info_out  | regex_search('Stats Server [0-9] Address *: {{ hostvars[item].mgmt_ip }}')"
  with_items: "{{ groups['stats_only_vsds'] }}"
  when: stats_out | default(False)
