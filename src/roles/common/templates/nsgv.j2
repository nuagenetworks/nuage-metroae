# *** WARNING ***
# This is a generated file. Manual changes to this file
# will be lost if reset-build or build is run
#
component_type: nsgv

required_bridges:
  - data
  - access

target_server_type: {{ item.target_server_type | default('kvm') }}
vmname: {{ item.vmname }}

nsgv_cpu_cores: {{ item.cpu_cores | default(1) }}

{% if item.telnet_port is defined %}
telnet_port: {{ item.telnet_port }}
{% endif %}

{% if item.nsgv_ip is defined %}
nsgv_ip: "{{ item.nsgv_ip }}"
{% endif %}

{% if item.nsgv_mac is defined %}
nsgv_mac: "{{ item.nsgv_mac }}"
{% endif %}

{% if item.mgmt_bridge is defined %}
mgmt_bridge: {{ item.mgmt_bridge }}
{% endif %}

{% if item.data_bridge is defined %}
data_bridge: {{ item.data_bridge }}
{% endif %}

{% if item.access_bridge is defined %}
access_bridge: {{ item.access_bridge }}
{% endif %}

{% if item.access_ports is defined %}
access_bridges:
{% for acc_port in item.access_ports %}
{% for port in nsgv_access_ports %}
{% if port.name in acc_port %}
    -  {{ port.bridge }}
{% endif %}
{% endfor %}
{% endfor %}
{% endif %}

bootstrap_method: {{ item.bootstrap_method | default('none') }}

{% if item.bootstrap_method | default('none') is match('zfb_external') %}
iso_path: {{ item.iso_path }}
iso_file: {{ item.iso_file }}
{% endif %}

{% if item.target_server_type is match("kvm") or item.target_server_type is match("vcenter") %}

target_server: {{ item.target_server }}

image_path: {{ image_path | default("MISSING") }}
image_file_name: {{ image_file_name | default("MISSING") }}

{% elif item.target_server_type is match("aws") %}

{% if item.provision_vpc_cidr is defined %}
provision_vpc:
  VPCCIDR: "{{ item.provision_vpc_cidr }}"
  NSGWANSubnetCIDR: "{{ item.provision_vpc_nsg_wan_subnet_cidr }}"
  NSGLANSubnetCIDR: "{{ item.provision_vpc_nsg_lan_subnet_cidr }}"
  PrivateSubnetCIDR: "{{ item.provision_vpc_private_subnet_cidr }}"
{% if item.proxy_external_ip is defined %}
  ProxyExternalIP: "{{ item.proxy_external_ip }}"
{% endif %}
  NSGvOnlyOnAWS: "{{ item.deploy_only_nsgv | default("false") }}"
{% else %}
aws_access_eni: {{ item.aws_access_eni }}
aws_data_eni: {{ item.aws_data_eni }}
{% endif %}

{% if item.aws_eip_allocid is defined %}
aws_eip_allocid: "{{ item.aws_eip_allocid }}"
{% endif %}

{% endif %}

{% if (item.bootstrap_method | default('none') == "zfb_metro") or (item.bootstrap_method | default("none") == "zfb_external") %}

zfb_nsg:
    nsg_organization: "{{ item.nsg_organization | default(nsgv_bootstrap.nsgv_organization) }}"
    nsg_name: "{{ item.nsg_name }}"
    NSGv_template_name: {{ item.NSGv_template_name | default(nsgv_bootstrap.NSGv_template_name) }}
    match_type: {{ item.match_type | default("none") | upper }}
    match_value: "{{ item.match_value | default("") }}"
    ssh_service: {{ "ENABLED" if item.ssh_service | default(ssh_service | default(False)) else "DISABLED" }}

{% endif %}
{% if item.bootstrap_method | default('none') == "zfb_metro" %}

zfb_nsg_infra:
    name: {{ item.nsg_infra_profile_name | default(nsgv_bootstrap.nsg_infra_profile_name) }}
    proxyDNSName: {{ item.proxy_dns_name | default(nsgv_bootstrap.proxy_dns_name) }}
    instanceSSHOverride: {{ "ALLOWED" if item.ssh_override | default(nsgv_bootstrap.ssh_override | default(False)) else "DISALLOWED" }}
    remoteLogServerAddress: "{{ nsgv_bootstrap.rsyslog_server | default('') }}"
    remoteLogServerPort: {{ nsgv_bootstrap.rsyslog_port | default(514) }}

{% if item.network_port_vlans is not defined %}
zfb_vsc_infra:
    name: {{ item.vsc_infra_profile_name | default(nsgv_bootstrap.vsc_infra_profile_name) }}
    firstController: {{ item.first_controller_address | default(nsgv_bootstrap.first_controller_address) }}
{% if item.second_controller_address is defined or nsgv_bootstrap.second_controller_address is defined %}
    secondController: {{ item.second_controller_address | default(nsgv_bootstrap.second_controller_address) }}
{% endif %}

{% endif %}

zfb_ports:
    network_port:
        name: {{ item.network_port_name }}
        physicalName: {{ item.network_port_physical_name | default("port1") }}
{% if item.network_port_vlans is defined %}
        vlans:
{% for port in nsgv_network_port_vlans %}
{% if port.name in item.network_port_vlans %}
            - vlan_value: {{ port.vlan_number }}
              uplink: {{port.uplink | default(False) }}
              vsc_infra_profile_name: {{port.vsc_infra_profile_name }}
              firstController: {{port.first_controller_address }}
{% if item.second_controller_address is defined or nsgv_bootstrap.second_controller_address is defined %}
              secondController: {{ item.second_controller_address | default(nsgv_bootstrap.second_controller_address) }}
{% endif %}

{% endif %}
{% endfor %}
{% endif %}
    access_ports:
{% if item.access_port_name is defined %}
        - name: {{ item.access_port_name }}
          physicalName: {{ item.access_port_physical_name | default("port2") }}
          vlan_value: {{ item.access_port_vlan_number | default(0) }}
          VLANRange: {{ item.access_port_vlan_range }}
{% endif %}
{% if item.access_ports is defined %}
{% for port in nsgv_access_ports %}
{% for acc_port in item.access_ports %}
{% if port.name in acc_port %}
        - name: {{ port.name }}
{% if port.physicalName is defined %}
          physicalName: {{ port.physical_name }}
{% else %}
          physicalName: 'port{{ loop.index  + 1 }}'
{% endif %}
          vlan_value: {{ port.vlan_number | default(0) }}
          VLANRange: {{ port.vlan_range }}
{% endif %}
{% endfor %}
{% endfor %}
{% endif %}

{% endif %}

{%- if item.preserve_vm is defined %}
preserve_vm: {{ item.preserve_vm }}
{%- endif %}
