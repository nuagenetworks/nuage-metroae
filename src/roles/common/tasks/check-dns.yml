- block:

  - name: Retrieve Host IP
    shell: "getent hosts {{ item.hostname }} | awk '{print $1}'"
    register: hostip

  - name: Ensure that the hostname maps to the proper mgmt IP
    assert:
      that: "'{{ hostip.stdout }}' ==  '{{ item.mgmt_ip }}'"
      msg: "IP address for {{item.hostname}} != {{item.mgmt_ip}}"

  - name: Set hostname for dns lookup
    set_fact:
      hostname: "{{item.hostname}}"

  - name: Set management ip for dns lookup
    set_fact:
      management_ip: "{{item.mgmt_ip}}"

  - name: Set fact for IPv6 argument for IPv6
    set_fact:
      addr_family_arg: "AAAA"
    when: item.mgmt_ip | ipv6

  - name: Set fact for IPv6 argument for IPv4
    set_fact:
      addr_family_arg: ""
    when: not item.mgmt_ip | ipv6

  - name: Ensure FQDNs are correct in the DNS server list
    command: "dig {{ addr_family_arg }} +short {{hostname}} @{{dns_server}}"
    with_items: "{{common.dns_server_list}}"
    register: dns_resolved_addresses
    loop_control:
      loop_var: dns_server
    ignore_errors: True

  - name: Set resolved address list
    set_fact:
      resolved_address_list: "{{ dns_resolved_addresses.results | map(attribute='stdout') | list | join (',')}}"

  - name: Assert ip address found by DNS matches the management ip
    assert:
      that: "{{ resolved_address_list is match(management_ip) }}"

  when: not skip_dns_resolution_tests|default(false)
