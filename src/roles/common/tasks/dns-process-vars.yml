---
###################
# DNS - DNS VM
###################

- name: When defined
  block:

  - block:
    - name: create dns directory
      file: path={{ nuage_unzipped_files_dir }}/dns state=directory

    - name: Set VSTAT KVM image location
      include_role:
        name: common
        tasks_from: find-image.yml
      vars:
        pattern: Nuage-elastic-*.qcow2

    - name: Verify that VSTAT VM QCOW2 file was found
      assert:
        that: image_file_name | default('MISSING') != 'MISSING',
        msg: "DNS image is taken from VSTAT, but we can't find the image path. Make sure VSTATs are defined in your deployment vstats.yml"

    - name: Stat the dns qcow2 file
      stat:
        path: "{{ nuage_unzipped_files_dir }}/dns/dns.qcow2"
      register: qcow_file

    - name: Copy vstat qcow2 image to dns directory
      copy: src={{ image_path }}/{{ image_file_name }} dest={{ nuage_unzipped_files_dir }}/dns/dns.qcow2 force=yes
      when: not qcow_file.stat.exists

    - name: Find name of DNS VM QCOW2 File
      find: path="{{ nuage_unzipped_files_dir }}/dns"  pattern="*.qcow2" recurse=yes
      register: rc_dns_file

    - debug: var=rc_dns_file verbosity=1

    - name: Register DNS QCOW2 variables with proper path and image locations for use in other playbooks
      set_fact:
        image_path: "{{ rc_dns_file.files[0].path | dirname }}"
        image_file_name: "{{ rc_dns_file.files[0].path | basename }}"
      when: rc_dns_file.matched > 0

    when: dnss | map(attribute='target_server_type') | list is issuperset(["kvm"]) or dnss | map(attribute='target_server_type') | list is issuperset(["heat"])

  - name: Create host_vars files for dns
    template: src=dns.j2 backup=no dest={{ inventory_dir }}/host_vars/{{ item.hostname }}
    with_items: "{{ dnss }}"

  when:
    - dnss is defined and dnss
  tags:
    - dns
