- name: Run this once
  block:

  - name: Format VSPK auth for VSPK module
    set_fact:
      vspk_auth:
        api_username: "{{ vsd_auth.username }}"
        api_password: "{{ vsd_auth.password }}"
        api_enterprise: "{{ vsd_auth.enterprise }}"
        api_url: "{{ vsd_auth.api_url }}"
        api_version: v5_0
    no_log: "{{ lookup('env', 'METROAE_NO_LOG') or 'true' }}"

  - name: If the basic license file is defined
    block:

    - name: Apply basic license (ignoring errors)
      connection: local
      nuage_vspk:
        auth: "{{ vspk_auth }}"
        state: present
        type: License
        properties:
          license: "{{ lookup('file', vsd_license_file) }}"
      ignore_errors: yes
      no_log: "{{ lookup('env', 'METROAE_NO_LOG') or 'true' }}"
      register: vsd_license_output

    - name: Print basic license application output for debugging
      debug: var=vsd_license_output
      when: vsd_license_output.failed == false or vsd_license_output.msg is search('The license already exists in the system')

    - name: Assert that the basic license application was successful or that the license was already present
      assert:
        that: "vsd_license_output.failed == false or vsd_license_output.msg is search('The license already exists in the system')"
        msg: "The basic license was not already present and could not be applied"

    when: vsd_license_file is defined

  - name: If the cluster license is defined for HA
    block:

    - name: Apply cluster license (ignoring errors)
      connection: local
      nuage_vspk:
        auth: "{{ vspk_auth }}"
        type: License
        state: present
        properties:
          license: "{{ lookup('file', vsd_cluster_license_file) }}"
      ignore_errors: yes
      no_log: "{{ lookup('env', 'METROAE_NO_LOG') or 'true' }}"
      register: vsd_cluster_license_output

    - name: Print cluster license application output for debugging
      debug: var=vsd_cluster_license_output
      when: vsd_cluster_license_output.failed == false or vsd_cluster_license_output.msg is search('The license already exists in the system')

    - name: Assert that the cluster license application was successful or that the license was already present
      assert:
        that: "vsd_cluster_license_output.failed == false or vsd_cluster_license_output.msg is search('The license already exists in the system')"
        msg: "The cluster license was not already present and could not be applied"

    when:
      - vsd_cluster_license_file is defined
      - vsd_sa_or_ha is match('ha')

  run_once: true
