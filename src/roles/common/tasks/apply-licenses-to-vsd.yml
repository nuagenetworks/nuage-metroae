- block:

  - name: Set VSD numbering for cluster install
    set_fact:
        cluster_node_for_license_application: "{{ groups['vsd_ha_node3'][0] }}"
    when:
      - not nuage_upgrade | default(False)
      - not vsd_standby_cluster | default(False)

  - name: Set VSD numbering for standby cluster install
    set_fact:
        cluster_node_for_license_application: "{{ groups['vsd_standby_node3'][0] }}"
    when:
      - vsd_standby_cluster | default(False)

  - name: Set VSD numbering for cluster upgrade
    set_fact:
        cluster_node_for_license_application: "{{ groups['vsd_ha_node1'][0] }}"
    when:
      - nuage_upgrade | default(False)
      - not vsd_standby_cluster | default(False)

  when: vsd_sa_or_ha is match('ha')

- name: Set Node for VSD license application
  set_fact:
    node_for_license_install: "{{ (vsd_sa_or_ha is match('ha')) | ternary(cluster_node_for_license_application, inventory_hostname) }}"

- block:

  - name: Format VSPK auth for VSPK module
    set_fact:
      vspk_auth:
        api_username: "{{ vsd_auth.username }}"
        api_password: "{{ vsd_auth.password }}"
        api_enterprise: "{{ vsd_auth.enterprise }}"
        api_url: "{{ vsd_auth.api_url }}"
        api_version: v5_0
    no_log: "{{ lookup('env', 'METROAE_NO_LOG') or 'true' }}"

  - block:

    - name: Apply basic license
      connection: local
      nuage_vspk:
        auth: "{{ vspk_auth }}"
        state: present
        type: License
        properties:
          license: "{{ lookup('file', vsd_license_file) }}"
      ignore_errors: yes
      no_log: "{{ lookup('env', 'METROAE_NO_LOG') or 'true' }}"
      register: vsd_license_output

    - name: Print basic license application output for debugging
      debug: var=vsd_license_output
      when: not vsd_license_output.failed or vsd_license_output.msg is search('The license already exists in the system')

    - name: Assert that the basic license application was successful or that the license was already present
      assert:
        that: "not vsd_license_output.failed or vsd_license_output.msg is search('The license already exists in the system')"
        msg: "The basic license was not already present and could not be applied"

    when: vsd_license_file is defined

  - block:

    - name: Apply cluster license
      connection: local
      nuage_vspk:
        auth: "{{ vspk_auth }}"
        type: License
        state: present
        properties:
          license: "{{ lookup('file', vsd_cluster_license_file) }}"
      ignore_errors: yes
      no_log: "{{ lookup('env', 'METROAE_NO_LOG') or 'true' }}"
      register: vsd_cluster_license_output

    - name: Print cluster license application output for debugging
      debug: var=vsd_cluster_license_output
      when: not vsd_cluster_license_output.failed or vsd_cluster_license_output.msg is search('The license already exists in the system')

    - name: Assert that the cluster license application was successful or that the license was already present
      assert:
        that: "not vsd_cluster_license_output.failed or vsd_cluster_license_output.msg is search('The license already exists in the system')"
        msg: "The cluster license was not already present and could not be applied"

    when:
      - vsd_cluster_license_file is defined
      - vsd_sa_or_ha is match('ha')

  when: inventory_hostname == node_for_license_install
