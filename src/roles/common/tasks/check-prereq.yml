---
  - name: Check for Ansible version
    assert:
      that: "ansible_version.full | version_compare('2.7.10', '==')"
      msg: "Ansible version 2.7.10 is required. Found Ansible version {{ ansible_version.full }}"

  - name: get the paramiko version
    shell: set -o pipefail && pip3 show paramiko | grep ^Version
    register: paramiko_version
    changed_when: False

  - name: Check Paramiko version
    assert:
      that: "paramiko_version is version('2.6.0', operator='ge', strict=True)"
      msg: "Paramiko version must be greater than or equal to 2.6.0. Found paramiko version {{ paramiko_version }}"

  - name: Check for supported host OS on Ansible host
    assert:
      that: "{{ ansible_os_family is match('RedHat') }}"
      msg: "Metro only supports RHEL/CentOS as an Ansible host"

  - name : Output installed packages yum
    command: yum list installed # noqa 303
    register: yumoutput
    changed_when: False

  - name : Output installed packages pip
    command: pip3 list installed
    register: pipoutput
    changed_when: False

  - name : Output installed group packages
    command: yum grouplist installed # noqa 303
    register: yumgroupoutput
    changed_when: False

  - name : Check if all pip packages are installed
    assert:
      that: "pipoutput.stdout|search('{{ item }}')"
      msg: "Missing required package {{ item }} . Please refer to setup.sh"
    with_lines: "{{ sed 's/==.*//' pip_requirements.txt }}"

  - name : Check if all yum packages are installed
    assert:
      that: "yumoutput.stdout|search('{{ item }}')"
      msg: "Missing required package {{ item }} . Please refer to setup.sh"
    with_lines: "{{ cat ./yum_requirements.txt }}"
    when: not item|search('@')

  - name : Check if all yum group packages are installed
    assert:
      that: "yumgroupoutput.stdout | lower is search('{{ item }}' | lower)"
      msg: "Missing required group package {{ item }} . Please refer to setup.sh"
    with_lines: "{{ cat ./yum_requirements.txt | grep '@' | sed 's/@//' }}"

