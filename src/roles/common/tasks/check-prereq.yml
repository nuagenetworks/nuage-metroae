---
  - name: Check for Ansible version
    assert:
      that: "ansible_version.full | version_compare('2.7.10', '==')"
      msg:  "Ansible version 2.7.10 is required. Found Ansible version {{ansible_version.full}}"

  - name: get the paramiko version
    shell: pip show paramiko | grep ^Version
    register: paramiko_version

  - name: get the paramiko version
    assert:
      that: "paramiko_version.stdout|search('2.4.1') or paramiko_version.stdout|search('2.2.1')"
      msg: "paramiko version 2.2.1 or 2.4.1 is required"

  - name: Check for supported host OS on Ansible host
    assert:
      that: "{{ ansible_os_family is match('RedHat') }}"
      msg:  "Metro only supports RHEL/CentOS as an Ansible host"

  - name : Output installed packages yum
    shell: yum list installed
    register: yumoutput

  - name : Output installed packages pip
    shell: pip list installed
    register: pipoutput

  - name : Output installed group packages
    shell: yum grouplist installed
    register: yumgroupoutput

  - name : Check if all pip packages are installed
    assert:
      that: "pipoutput.stdout|search('{{ item }}')"
      msg:  "Missing required package {{ item }} . Please refer to setup.sh"
    with_lines:  sed 's/==.*//' pip_requirements.txt

  - name : Check if all yum packages are installed
    assert:
      that: "yumoutput.stdout|search('{{ item }}')"
      msg:  "Missing required package {{ item }} . Please refer to setup.sh"
    with_lines: cat ./yum_requirements.txt
    when: not item|search('@')

  - name : Check if all yum group packages are installed
    assert:
      that: "yumgroupoutput.stdout | lower is search('{{ item }}' | lower)"
      msg:  "Missing required group package {{ item }} . Please refer to setup.sh"
    with_lines: cat ./yum_requirements.txt | grep "@" | sed 's/@//'


