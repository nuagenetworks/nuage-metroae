---
- block: #VNS UTIL

  - block: #QCOW2

    - name: Find name of VNS UTIL QCOW2 File
      find: path="{{ nuage_unzipped_files_dir }}/vns/utils"  pattern="vns-util-*.qcow2" recurse=yes
      register: rc_vnsutil_file

    - debug: var=rc_vnsutil_file verbosity=1

    - name: Register VNS UTIL QCOW2 variables with proper path and image locations for use in other playbooks
      set_fact:
        qcow2_path: "{{ rc_vnsutil_file.files[0].path | dirname }}"
        qcow2_file_name: "{{ rc_vnsutil_file.files[0].path | basename }}"
      when: rc_vnsutil_file.matched > 0

    when: vnsutils | map(attribute='target_server_type') | list | issuperset(["kvm"])

  - block: #OVA

    - name: Find name of VNS UTIL OVA File
      find: path="{{ nuage_unzipped_files_dir }}/vns/utils"  pattern="vns-util-*.ova" recurse=yes
      register: rc_vnsutil_file

    - debug: var=rc_vnsutil_file verbosity=1

    - name: Register VNS UTIL OVA variables with proper path and image locations for use in other playbooks
      set_fact:
        ova_path: "{{ rc_vnsutil_file.files[0].path | dirname }}"
        ova_file_name: "{{ rc_vnsutil_file.files[0].path | basename }}"
      when: rc_vnsutil_file.matched > 0

    when: vnsutils | map(attribute='target_server_type') | list | issuperset(["vcenter"])

  when:
    - vnsutils is defined
  tags:
    - vns

- name: Set vnsutil_check
  set_fact: vnsutil_check={{vnsutils is defined}}

- name: Assign empty list to myvnsutils if it is undefined
  set_fact: vnsutils= default([])
  when: not vnsutil_check

- name: Create host_vars files for vnsutil
  template: src=vnsutil.j2 backup=no dest={{ inventory_dir }}/host_vars/{{ item.hostname }}
  with_items: "{{ vnsutils }}"
  when: vnsutil_check
