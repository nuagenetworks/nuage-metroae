---
- block:

  - block:

    - name: Set VSTAT VM QCOW2 location
      include_role:
        name: common
        tasks_from: find-file.yml
      vars:
        dir_name: "{{ nuage_unzipped_files_dir }}"
        pattern: "Nuage-elastic-*.qcow2"

    - name: Register VSTAT QCOW2 variables with proper path and image locations for use in other playbooks
      set_fact:
        image_path: "{{ file_path }}"
        image_file_name: "{{ file_name }}"

    when: vstats | map(attribute='target_server_type') | list is issuperset(["kvm"])

  - block:

    - name: Set VSTAT OVA/OVF location
      include_role:
        name: common
        tasks_from: find-file.yml
      vars:
        dir_name: "{{ nuage_unzipped_files_dir }}"
        pattern:
          - "Nuage-elastic-*.ova"
          - "Nuage-elastic-*.ovf"

    - name: Register VSTAT OVA/OVF variables with proper path and image locations for use in other playbooks
      set_fact:
        image_path: "{{ file_path }}"
        image_file_name: "{{ file_name }}"

    when: vstats | map(attribute='target_server_type') | list is issuperset(["vcenter"])

  - name: Find name of VSTAT upgrade Package Files (EL7 architecture)
    include_role:
      name: common
      tasks_from: find-file.yml
    vars:
      pattern: "Nuage-elastic-*-bundle.bin"

  - name: Register VSTAT upgrade script variables with proper path and script locations for use in other playbooks
    set_fact:
      vstat_upgrade_scripts_path: "{{ file_path }}/"
      vstat_upgrade_scripts_file: "{{ file_name }}"

  - name: Register that image files are missing
    set_fact:
      missing_image_file: true
    when: missing_file | default(True)

  - name: Verify VSTAT management gateway is in correct IP range
    include_role:
      name: common
      tasks_from: check-ip-in-range.yml
    vars:
      ip_address: "{{ item.mgmt_gateway }}"
      netaddr: "{{ item.mgmt_ip }}"
      netmask: "{{ item.mgmt_ip_prefix }}"
    with_items:
      - "{{ vstats }}"

  - name: Create host_vars files for vstat
    include_tasks: write-host-files.yml
    vars:
      component_template: vstat
      component_hostname: "{{ component.hostname }}"
    loop_control:
      loop_var: component
    with_items: "{{ vstats }}"

  - name: Verify VStat DNS entries exist at server {{ dns_server_list[0] }}, and hostnames map to their management IPs
    include_tasks: check-dns.yml
    with_items: "{{ vstats }}"
    when: dns_server_list

  when:
    - vstats is defined and vstats|length > 0
