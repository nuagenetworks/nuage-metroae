- name: Wait for ssh to be ready
  include_role:
    name: common
    tasks_from: wait-for-ssh
  vars:
    ssh_host: "{{ hostname }}"
    host_username: "{{ component_username }}"

- name: Check for container id rsa
  stat:
    path: /source/id_rsa.pub
  register: container_id_rsa_file

- name: Set fact for ssh key
  set_fact:
    ssh_file: /source/id_rsa.pub
  when: container_id_rsa_file.exists

- name: Set fact for ssh key
  set_fact:
    ssh_file: "{{ lookup('env','HOME') + '/.ssh/id_rsa.pub' }}"
  when: not container_id_rsa_file.exists

- name: Copy SSH Public Key to VSD
  authorized_key:
      user: "{{ vsd_custom_username | default(vsd_default_username) }}"
      key: "{{ lookup('file', ssh_file) }}"
  remote_user: "{{ vsd_custom_username | default(vsd_default_username) }}"
  become: "{{ 'no' if vsd_custom_username | default(vsd_default_username) == 'root' else 'yes' }}"
  vars:
    ansible_become_pass: "{{ vsd_custom_password | default(vsd_default_password) }}"
  when: component_type|default("NONE") == 'vsd'

- name: Copy SSH Public Key to VSTAT
  authorized_key:
      user: "{{ vstat_custom_username | default(vstat_default_username) }}"
      key: "{{ lookup('file', ssh_file) }}"
  remote_user: "{{ vstat_custom_username | default(vstat_default_username) }}"
  become: "{{ 'no' if vstat_custom_username | default(vstat_default_username) == 'root' else 'yes' }}"
  vars:
    ansible_become_pass: "{{ vstat_custom_password | default(vstat_default_password) }}"
  when: component_type|default("NONE") == 'vstat'

- name: Copy SSH Public Key to NUH
  authorized_key:
      user: "{{ nuh_custom_username | default(nuh_default_username) }}"
      key: "{{ lookup('file', ssh_file) }}"
  remote_user: "{{ nuh_custom_username | default(nuh_default_username) }}"
  become: "{{ 'no' if nuh_custom_username | default(nuh_default_username) == 'root' else 'yes' }}"
  vars:
    ansible_become_pass: "{{ nuh_custom_password | default(nuh_default_password) }}"
  when: component_type|default("NONE") == 'nuh'

- name: Copy SSH Public Key to target_servers
  authorized_key:
      user: "{{ target_server_username }}"
      key: "{{ lookup('file', ssh_file) }}"
  remote_user: "{{ target_server_username }}"
  become: "{{ 'no' if target_server_username == 'root' else 'yes' }}"
  vars:
    ansible_become_pass: "{{ target_server_password }}"
  when: target_server_type == 'kvm'
