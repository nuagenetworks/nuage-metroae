- name: Clean known_hosts of VSD's (ignoring errors)
  known_hosts:
    name: "{{ hostname }}"
    state: absent
  delegate_to: localhost
  no_log: True
  ignore_errors: True

- name: Wait for TPM ssh to be ready before config
  include_role:
    name: common
    tasks_from: wait-for-tpm-ssh-port
  vars:
    ssh_host: "{{ hostname }}"
    ssh_timeout_seconds: 600
    ssh_password: "{{ tpm_default_password }}"
    ssh_user: "{{ tpm_default_username }}"

- block:

  - block:

    - block:

      - name: Generate certs for all 3 TPM server
        command: rc gen-certs -m {{ tpm1.name }} {{ tpm2.name }} {{ tpm3.name }} -v

      - name: Copy the certificates over to second TPM server
        command: scp -P 2222 {{ tpm2.name }}.tar.gz administrator@{{ tpm2.hostname }}:/home/administrator/

      - name: Copy the certificates over to third TPM server
        command: scp -P 2222 {{ tpm3.name }}.tar.gz administrator@{{ tpm3.hostname }}:/home/administrator/
      
      when: inventory_hostname == tpm1.hostname

    - name: Enable redundancy with the deployed certificate on the first TPM server
      command: rc initiate -c {{ tpm1.name }}.tar.gz -v
      when: inventory_hostname == tpm1.hostname

    - name: Enable redundancy with the deployed certificate on the second TPM server
      command: rc initiate -c {{ tpm2.name }}.tar.gz -v
      when: inventory_hostname == tpm2.hostname

    - name: Enable redundancy with the deployed certificate on the third TPM server
      command: rc initiate -c {{ tpm3.name }}.tar.gz -f -v
      when: inventory_hostname == tpm3.hostname

    when: tpm_sa_or_ha is match('ha')

  remote_user: "{{ tpm_default_username }}"
