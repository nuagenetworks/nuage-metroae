---
- name: Set local variable with vmname
  set_fact:
    vm_name: "{{ vmname }}"

- name: Check if kvm prereqs are satisfied
  include_role:
    name: common
    tasks_from: kvm-predeploy-prereq

- name: Check if VSC is running
  include_role:
    name: check-node-running

- name: Display if skipping predeploy
  debug:
    msg:
      - "****************************************************"
      - "Skipping VSC predeploy because it is already present"
      - "****************************************************"
  when: node_present

- block:

    - name: set skip copy images to default
      set_fact:
        skip_copy_images: False
      when: skip_copy_images is undefined

    - include_tasks: copy_qcow2.yml
      when: not skip_copy_images

    - block:
      - name: Check to make sure there is an existing qcow image
        stat:
          path: "{{ images_path }}/{{ vm_name }}/{{ inventory_hostname }}.qcow2"
        register: statResult

      - name: check the result of image find command
        assert:
          that: statResult.stat.exists == True
          msg: Missing qcow2 file {{ images_path }}/{{ vm_name }}/{{ inventory_hostname }}.qcow2

      when: skip_copy_images

    - name: Setup VSC temporary configuration files
      template: src={{ item }}.j2 backup=no dest={{ images_path }}/{{ vm_name }}/{{ item }}
      with_items:
        - bof.cfg
        - config.cfg

    - name: Copy temporary configuration files to the VSC image
      command: guestfish --rw -a {{ images_path }}/{{ vm_name }}/{{ inventory_hostname }}.qcow2 -m {{ vsc_partition }} copy-in {{ images_path }}/{{ vm_name }}/{{ item }} /
      with_items:
        - bof.cfg
        - config.cfg

    - name: Remove temporary configuration files
      file: path={{ images_path }}/{{ vm_name }}/{{ item }} state=absent
      with_items:
        - bof.cfg
        - config.cfg

    - name: Preallocate disk space to avoid pausing the VM, this also checks disk space
      shell: "fallocate -l {{ vsc_fallocate_size_gb }}G {{ images_path }}/{{ vm_name }}/{{ inventory_hostname }}.qcow2"
      when: vsc_fallocate_size_gb > 0

    - name: Define VM
      virt: name={{ vm_name }}
            command=define
            xml="{{ lookup('template', 'vsc.xml.j2') }}"
            uri=qemu:///system

    - name: Autostart
      virt: name={{ vm_name }}
            command=status
            autostart=True
            uri=qemu:///system

    - name: Run VM
      virt: name={{ vm_name }}
            state=running
            uri=qemu:///system

  when: not node_present
  delegate_to: "{{ target_server }}"
  remote_user: "{{ target_server_username }}"
  become: "{{ 'no' if target_server_username == 'root' else 'yes' }}"
