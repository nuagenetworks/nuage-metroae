- name: Wait for VSTAT ssh to be ready after upgrade
  include_role:
    name: common
    tasks_from: wait-for-ssh
  vars:
    ssh_host: "{{ mgmt_ip }}"
    host_username: "{{ vstat_username | default(vstat_default_username) }}"
    retries: 90

- name: Get vsd node(s) information
  import_role:
    name: common
    tasks_from: vsd-node-info.yml
  vars:
    vsd_hostname: "{{ vsd_fqdn }}"
  run_once: true

- name: Get the es version after upgrade
  command: "curl localhost:9200"        # noqa 303
  register: upgraded_version
  until: upgraded_version.rc == 0
  retries: 5
  delay: 30
  changed_when: upgraded_version.rc == 0

- name: Set variable for upgrade versions
  set_fact:
    upgrade_60_2010:
      "{{ upgrade_from_version|upper|replace('R','') is search('6.0.') and upgrade_to_version|upper|replace('R','') is search('20.10.') }}"

- name: Set variable for upgrade versions
  set_fact:
    upgrade_2010_2010:
      "{{ upgrade_from_version|upper|replace('R','') is search('20.10.') and upgrade_to_version|upper|replace('R','') is search('20.10.') }}"

- name: Check ES version when required
  block:

  - name: Convert version to json format
    set_fact:
      upgraded_version_json: "{{ upgraded_version.stdout | from_json }}"

  - name: Get es version saved on vstat node(s)
    command: "cat /root/current_es_version.log"
    register: old_es_version
    changed_when: False

  - name: Compare es versions before and after upgrade
    assert:
      that: old_es_version.stdout != upgraded_version_json.version.number
      msg: "Expected Elastisearch version change not detected, upgrade of ES failed"

  when: not upgrade_60_2010 and not upgrade_2010_2010

- block:

  - name: stat es-cluster-nuage-index-setting.sh
    stat:
      path: "/root/nuage_elasticsearch/scripts/es-cluster-nuage-index-setting.sh"
    register: es_cluster_nuage_index_setting

  - name: Execute es-cluster-nuage-index-setting.sh
    command: "/root/nuage_elasticsearch/scripts/es-cluster-nuage-index-setting.sh"
    when: es_cluster_nuage_index_setting.stat.exists

  - name: stat cluster_nuage_index_setting.sh
    stat:
      path: "/root/nuage_elasticsearch/scripts/cluster_nuage_index_setting.sh"
    register: cluster_nuage_index_setting

  - name: Execute cluster_nuage_index_setting.sh
    command: "/root/nuage_elasticsearch/scripts/cluster_nuage_index_setting.sh"
    when: cluster_nuage_index_setting.stat.exists and not es_cluster_nuage_index_setting.stat.exists

  when: vstat_sa_or_ha is match('ha')
  run_once: true

- name: stat es-delete-watcher.py script
  stat:
    path: "/root/nuage_elasticsearch/scripts/es-delete-watcher.py"
  register: es_delete_watcher

- name: Execute es-delete-watcher.py
  command: "/root/nuage_elasticsearch/scripts/es-delete-watcher.py"
  run_once: true
  when: es_delete_watcher.stat.exists

- name: stat delete_watcher.py
  stat:
    path: "/root/nuage_elasticsearch/scripts/delete_watcher.py"
  register: delete_watcher

- name: Execute delete_watcher.py
  command: "/root/nuage_elasticsearch/scripts/delete_watcher.py"
  run_once: true
  when: delete_watcher.stat.exists and not es_delete_watcher.stat.exists

- name: Enable stats
  include_role:
    name: common
    tasks_from: vstat-enable-stats
  loop: "{{ groups['primary_vsds'] }}"
  loop_control:
    loop_var: vsd
  run_once: true
