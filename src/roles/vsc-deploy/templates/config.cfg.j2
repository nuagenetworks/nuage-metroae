exit all
configure

#--------------------------------------------------
echo "System Configuration"
#--------------------------------------------------
    system
        name {{ system_name | default(inventory_hostname) }}
        time
            ntp
            {% for ntp_server in ntp_server_list %}
                server {{ ntp_server }}
            {% endfor %}
                no shutdown
            exit
        exit
    exit
#--------------------------------------------------
#echo "System Security Configuration"
#--------------------------------------------------
    system
        security
            tls-profile "vsc-tls-profile" create
                shutdown
            exit
            {% if enable_hardening | default(True) %}

            {% include "ssh_hardening.cfg.j2" %}

            {% endif %}
        exit
    exit
#--------------------------------------------------
echo "Virtual Switch Controller Configuration"
#--------------------------------------------------
    vswitch-controller
        xmpp-server "{{ xmpp.username }}@{{ vsd_fqdn }}"
    exit

#--------------------------------------------------
echo "Router (Network Side) Configuration"
#--------------------------------------------------
    router
        {% if control_ip is defined and control_netmask_prefix is defined %}
        interface "control"
            {% if internal_ctrl_ip is defined %}
            address {{ internal_ctrl_ip }}/{{ control_netmask_prefix }}
            {% else %}
            address {{ control_ip }}/{{ control_netmask_prefix }}
            {% endif %}
            no shutdown
        exit
        {% endif %}
        interface "system"
        {% if system_ip is defined %}
            address {{ system_ip }}/32
            no shutdown
        {% else %}
            shutdown
        {% endif %}
        exit
        {% if as_number %}
        autonomous-system {{ as_number }}
        {% endif %}
        {% if system_ip is defined %}
        router-id {{ system_ip }}
        {% endif %}
#--------------------------------------------------
##echo "Static Route Configuration"
###--------------------------------------------------
        {% for vsc_item in groups['vscs'] %}
          {% if vsc_item != inventory_hostname %}
            {% if hostvars[vsc_item].system_ip is defined %}
              {% if hostvars[vsc_item].system_ip != system_ip | default('') and hostvars[vsc_item].control_ip is defined %}
        static-route {{ hostvars[vsc_item].system_ip }}/32 next-hop {{ hostvars[vsc_item].control_ip }}
              {% endif %}
            {% endif %}
          {% endif %}
        {% endfor %}
        {% if internal_data_gateway_ip is defined %}
        static-route 0.0.0.0/0 next-hop {{ internal_data_gateway_ip }}
        {% endif %}
    exit

#--------------------------------------------------
echo "Service Configuration"
#--------------------------------------------------

        {% for vprn_obj in vprn_object_list %}
    service
        vprn {{ vprn_obj.vlan }} customer 1 create
            route-distinguisher {{ as_number }}:{{ vprn_obj.vlan }}
            interface "control" create
                {% if vprn_obj.ipaddr != "" %}
                address {{ vprn_obj.ipaddr }}/{{ vprn_obj.netmask_length }}
                {% elif control_ip is defined %}
                address {{ control_ip }}/{{ control_netmask_prefix }}
                {% endif %}
                sap A/2:{{ vprn_obj.vlan }} create
                exit
            exit

        {% if vprn_obj.ipaddr != "" %}
        static-route 0.0.0.0/0 next-hop {{ vprn_obj.ipaddr | ipsubnet(vprn_obj.netmask_length, 0) | ipaddr('next_usable') }}
        {% elif control_ip is defined %}
        static-route 0.0.0.0/0 next-hop {{ control_ip | ipsubnet(control_netmask_prefix, 0) | ipaddr('next_usable') }}
        {% endif %}

            ntp
                no shutdown
            exit
            no shutdown
        exit
    exit
        {% endfor %}

#--------------------------------------------------
##echo "BGP Configuration"
###--------------------------------------------------
    router
        bgp
            connect-retry 2
            min-route-advertisement 1
            outbound-route-filtering
                extended-community
                    send-orf
                exit
            exit
            group "internal"
                type internal
                {% for vsc_item in groups['vscs'] %}
                  {% if vsc_item != inventory_hostname %}
                    {% if hostvars[vsc_item].system_ip is defined %}
                      {% if hostvars[vsc_item].system_ip != system_ip %}
                neighbor {{ hostvars[vsc_item].system_ip }}
                exit
                      {% endif %}
                    {% endif %}
                  {% endif %}
                {% endfor %}
                family evpn
            exit
        exit
    exit
exit
exit all
