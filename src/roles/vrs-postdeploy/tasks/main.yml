---
- name: Pull facts on VRS target {{ inventory_hostname }}
  action: setup
  remote_user: "{{ compute_username | default(target_server_username) }}"
  become: "{{ 'no' if compute_username == 'root' else 'yes' }}"

# TODO: Evalue use of include_role: vrs_health.
# This looks like some duplicate code

- name: Set transport type
  set_fact:
    transport_type:  "{{ openflow_tls | ternary ('ssl', 'tcp') }}"

- name: Get controller connection info (ignoring errors)
  shell: "ovs-vsctl show | grep -Pzl '(?s)Controller \"ctrl(1|2)\"\\n *target: \"{{ transport_type }}:({{ item }}):6633\"\\n *role: (master|slave)\\n *is_connected: true'"     # noqa 204
  with_items:
    - "{{ active_controller_addr }}"
    - "{{ standby_controller_addr }}"
  register: command_result
  remote_user: "{{ compute_username | default(target_server_username) }}"
  become: "{{ 'no' if compute_username == 'root' else 'yes' }}"
  ignore_errors: yes
  changed_when: False

- name: Check primary controller
  assert:
    that: "command_result.results[0].rc == 0"
    msg: "Switch not connected to primary controller"

- name: Check secondary controller
  assert:
    that: "command_result.results[1].rc == 0"
    msg: "Switch not connected to secondary controller"

- block:
  - name: Ceate a local temp directory
    # TODO: Use tempfile module in Ansible 2.3+
    tempfile:
      state: directory
      path: "{{ lookup('env', 'TMPDIR') | default('/tmp/',true) }}"
    delegate_to: localhost
    register: mktemp_output

  - name: Copy ovs-vsctl show output to a temporary file
    copy: content={{ command_result.results }} dest={{ mktemp_output.path }}/{{ inventory_hostname }}.tmp
    delegate_to: localhost

  - name: Run verification script for OVS show command
    command: python {{ role_path }}/files/ovs_result_verify.py {{ node_ip_addr }} {{ mktemp_output.path }}/{{ inventory_hostname }}.tmp
    delegate_to: localhost
    register: ovs_show_result

  always:
  - name: Delete the temporary directory
    file: path={{ mktemp_output.path }}  state=absent
    delegate_to: localhost

- name: Verify registration on Active and Standby Controller
  include_tasks: check_vsc_registration.yml
  vars:
    controller_addr: "{{ item }}"
  with_items:
   - "{{ active_controller_addr }}"
   - "{{ standby_controller_addr }}"
