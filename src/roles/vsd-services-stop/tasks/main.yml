---
- include_role:
    name: check-node-reachability

- block:

  - block:

    - name: Stop vsd statistics services
      shell: "{{ stop_stats }}"
      ignore_errors: yes
      register: stop_stats_output

    - name: Check if an error should be ignored
      assert:
        that: "not stop_stats_output.failed or stop_stats_output.stderr is search('not found')"
        msg: "Error while attempting to stop vsd stats services"

    - name: Pause for processes to exit
      pause:
        seconds: 20

    - name: Check for left over stats processes
      shell: "{{ stats_pids }}"
      register: list_stats_pids

    - name: Kill the stats pids if they exists (ignoring errors)
      shell: "kill -9 {{ item }}"
      with_items: "{{ list_stats_pids.stdout_lines|default([]) }}"
      ignore_errors: yes
      when: list_stats_pids.stdout.strip()!= ""         # noqa 602

    when: groups['vstats'] is defined and groups['vstats']

  - block:

    - name: Stop vsd core services (ignoring errors)
      shell: "{{ stop_vsd_core }}"
      ignore_errors: yes

    - name: Pause for processes to exit
      pause:
        seconds: 20

    - name: Check for left over vsd-core processes
      shell: "{{ core_pids }}"
      register: list_core_pids

    - name: Kill the vsd-core pids if they exists (ignoring errors)
      shell: "kill -9 {{ item }}"
      with_items: "{{ list_core_pids.stdout_lines|default([]) }}"
      ignore_errors: yes
      when: list_core_pids.stdout.strip()!=""   # noqa 602

    - name: Stop vsd common services (ignoring errors)
      shell: "{{ stop_vsd_common }}"
      ignore_errors: yes

    - name: Pause for processes to exit
      pause:
        seconds: 20

    - name: Check for left over vsd common processes
      shell: "{{ common_pids }}"
      register: list_common_pids

    - name: Kill the vsd-common pids if they exists (ignoring errors)
      shell: "kill -9 {{ item }}"
      with_items: "{{ list_common_pids.stdout_lines|default([]) }}"
      ignore_errors: yes
      when: list_common_pids.stdout.strip()!=""         # noqa 602

  remote_user: "{{ vsd_custom_username | default(vsd_default_username) }}"
  become: "{{ 'no' if vsd_custom_username | default(vsd_default_username) == 'root' else 'yes' }}"
  vars:
    ansible_become_pass: "{{ vsd_custom_password | default(vsd_default_password) }}"
  when: node_reachable
