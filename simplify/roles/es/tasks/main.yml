---

- name: Check for ES standalone or cluster
  set_fact:
    es_cluster: "{{ nuage.stats | length == 3}}"

- name: Wait for VSTAT ssh to be ready
  local_action:
    module: wait_for
    port: "22"
    host: "{{ ip }}"
    search_regex: OpenSSH
    delay: 1

- block:
  - name: Update /etc/hosts file
    blockinfile:
      dest: /etc/hosts
      block: |
        {% for host in groups['ess']  %}
        {{ hostvars[host]['ip'] }}    {{ host }}
        {% endfor %}
  
  - name: Update /etc/hosts file on VSD(s)
    blockinfile:
      dest: /etc/hosts
      marker: "# {mark} Ansible created entries for stats nodes"
      block: |
        {% for host in groups['vstats']  %}
        {{ hostvars[host]['mgmt_ip'] }}    {{ host }}
        {% endfor %}
    delegate_to: "{{ item }}"
    with_items: "{{ groups['vsds'] }}"
    run_once: true
  
  - block:
    - name: Generate SSH keys
      shell: ssh-keygen -b 2048 -t rsa -f /root/.ssh/id_rsa -q -N ""
      args:
        creates: /root/.ssh/id_rsa
      delegate_to: "{{ item }}"
      with_items: "{{ groups['ess'] }}"
      run_once: true
  
    - name: Get generated SSH keys
      shell: cat ~/.ssh/id_rsa.pub
      register: ssh_key_lst
      delegate_to: "{{ item }}"
      with_items: "{{ groups['ess'] }}"
      run_once: true
  
    - name: Add SSH keys to authorized_keys file
      shell: "echo {{ item[1].stdout }} >> /root/.ssh/authorized_keys"
      delegate_to: "{{ item[0] }}"
      with_nested:
        - "{{ groups['ess'] }}"
        - "{{ ssh_key_lst.results }}"
      run_once: true
    when: es_cluster
  
  - name: Configure ntpd and ntpdate and local time zone
    include_role:
      name: common
      tasks_from: linux-ntp

  - name: Start firewalld
    systemd:
      name: firewalld
      state: started
      enabled: yes

  - name: Reset firewalld on VSTAT
    command: "{{ item }}"
    with_items:
      - "firewall-cmd --set-default-zone=public"
      - "firewall-cmd --permanent --remove-port=9200/tcp --remove-port=9300/tcp"

  - name: Config firewalld on VSTAT vm to accept conn on ports 9200,9300 from vsd(s)
    command: |
       "firewall-cmd --permanent --zone=public 
         --add-rich-rule=\"rule family=\"ipv4\" source address=\"{{ item.mgmt_ip }}\" port protocol=\"tcp\" port=\"9200\" accept\"
         --add-rich-rule=\"rule family=\"ipv4\" source address=\"{{ item.mgmt_ip }}\" port protocol=\"tcp\" port=\"9300\" accept\""
    with_items: "{{ nuage.vsds }}"

  - name: Reload firewalld on VSTAT
    command: "firewall-cmd --reload" 

  - name: Restart elastic search
    systemd:
      name: elasticsearch
      state: restarted

  - name: Execute VSTAT cluster script on standalone or clustered vsds
    command: /opt/vsd/vsd-es-cluster-config.sh -e {{ groups['ess'][0] }},{{ groups['ess'][1] }}, {{ groups['ess'][2] }}
    delegate_to: "{{ groups['vsds'][0] }}"
    environment:
      SSHPASS: "Alcateldc"
    run_once: true
    when: es_cluster
  
  - name: Enable stats collection on the vsd(s)
    command: /opt/vsd/vsd-stats.sh -e {{ groups['ess'][0] }} {{ es_cluster | ternary( ',' groups['ess'][1] ',' groups['ess'][2], '' ) }}
    delegate_to: "{{ item }}"
    with_items: "{{ groups['vsds'] }}"
    run_once: true

  - name: Create SSL cert directory
    file: path=/etc/nginx/ssl state=directory

  - block:
    - block:
      - name: Download pip installer through proxy
        command: curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py

      - name: Execute pip installer through proxy
        command: python get-pip.py

      - name: Install pexpect on VSD1 {{ groups['vsds'][0] }} through proxy
        pip:
          name: pexpect
      environment:
        http_proxy: "{{ nuage.proxy is defined | ternary( nuage.proxy, '' ) }}"
        https_proxy: "{{ nuage.proxy is defined | ternary( nuage.proxy, '' ) }}"
      run_once: true

    - name: Revoke old stats cert, if any
      command: "/opt/vsd/ejbca/deploy/certMgmt.sh -a revoke -u {{ inventory_hostname_short }}"
      ignore_errors: yes

    - name: Create and transfer certs from VSD for VSS
      expect:
       timeout: 120
       command: "/opt/vsd/ejbca/deploy/certMgmt.sh -a generate -u {{ inventory_hostname_short }} -c {{ inventory_hostname_short }} 
                 -d {{ inventory_hostname }} -f pem -t server -s root@{{inventory_hostname}}:/etc/nginx/ssl -o csp"
       responses:
         (?i)password: "Alcateldc"

    delegate_to: "{{ groups['vsds'][0] }}"

    - name: Chown
      command: "chown -R root:root /etc/nginx/ssl"

    - name: Chmod
      command: "chmod -R 600 /etc/nginx/ssl"

  # block properties
  remote_user: "root"
