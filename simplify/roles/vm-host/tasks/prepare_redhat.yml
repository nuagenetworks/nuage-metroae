---

- name: "Configure yum proxy {{ nuage.http_proxy }}"
  lineinfile:
    path: /etc/yum.conf
    state: present
    regexp: '^proxy='
    line: "proxy={{ nuage.http_proxy }}"
  remote_user: "root"
  when: nuage.http_proxy is defined

- name: Check if required OS packages are installed
  command: rpm -q qemu-kvm libvirt bridge-utils libguestfs-tools libvirt-python ntp
  register: rpm_check
  ignore_errors: True

- name: Print rpm_check when verbosity >= 1
  debug: var=rpm_check verbosity=1

- name: Install packages for RedHat OS family distros
  yum: name={{ item }} state=present
  with_items:
   - qemu-kvm
   - libvirt
   - bridge-utils
   - libguestfs-tools
   - libvirt-python
   - ntp
  when: rpm_check.rc == 1

- name: Make sure libvirtd has started
  service:
    name: libvirtd
    enabled: yes
    state: started

- block:
  - name: Create management network bridge if not existing
    copy:
      dest: "/etc/sysconfig/network-scripts/ifcfg-{{nuage.networks.mgmt.bridge}}"
      content: |
        DEVICE={{nuage.networks.mgmt.bridge}}
        NAME={{nuage.networks.mgmt.bridge}}
        TYPE=Bridge
        HOTPLUG=no
        ONBOOT=yes
        NM_CONTROLLED=no
        BOOTPROTO=static
        IPADDR={{inventory_hostname}}
        NETMASK={{nuage.networks.mgmt.netmask}}
        GATEWAY={{nuage.networks.mgmt.gateway}}
        IPV4_FAILURE_FATAL=yes
        {% if nuage.dns_server_list is defined %}
        {% if nuage.dns_server_list[0] is defined %}
        DNS1="{{ nuage.dns_server_list[0] }}"
        {% endif %}
        {% if nuage.dns_server_list[1] is defined %}
        DNS2="{{ nuage.dns_server_list[1] }}"
        {% endif %}
        {% endif %}
        IPV6INIT=no
  - name: Move management interface {{ansible_default_ipv4.interface}} to bridge
    copy:
      dest: "/etc/sysconfig/network-scripts/ifcfg-{{ansible_default_ipv4.interface}}"
      backup: yes
      content: |
        DEVICE={{ansible_default_ipv4.interface}}
        NAME={{ansible_default_ipv4.interface}}
        TYPE=Ethernet
        HOTPLUG=no
        ONBOOT=yes
        NM_CONTROLLED=no
        BOOTPROTO=none
        BRIDGE="{{nuage.networks.mgmt.bridge}}"
        MTU={{ansible_default_ipv4.mtu}}
  when: nuage.networks.mgmt.bridge not in ansible_interfaces and ansible_default_ipv4.address == inventory_hostname
      
# Assume data bridge has no IP
- block:
  - name: Create data network bridge if not existing
    copy:
      dest: "/etc/sysconfig/network-scripts/ifcfg-{{nuage.networks.data.bridge}}"
      content: |
        DEVICE={{nuage.networks.data.bridge}}
        NAME={{nuage.networks.data.bridge}}
        TYPE=Bridge
        HOTPLUG=no
        ONBOOT=yes
        NM_CONTROLLED=no
        BOOTPROTO=none
        IPV6INIT=no
  - name: Move data interface to bridge
    copy:
      dest: "/etc/sysconfig/network-scripts/ifcfg-{{nuage.networks.data.nic}}"
      backup: yes
      content: |
        DEVICE={{nuage.networks.data.nic}}
        NAME={{nuage.networks.data.nic}}
        TYPE=Ethernet
        HOTPLUG=no
        ONBOOT=yes
        NM_CONTROLLED=no
        BOOTPROTO=none
        BRIDGE="{{nuage.networks.data.bridge}}"
        MTU={{nuage.networks.data.mtu | default(9000) }}
    when: nuage.networks.data.nic is defined
  when: nuage.networks.data.bridge not in ansible_interfaces
  
- name: Restart networking if something changed
  service:
    name: network
    state: restarted
  when: nuage.networks.mgmt.bridge not in ansible_interfaces or nuage.networks.data.bridge not in ansible_interfaces
