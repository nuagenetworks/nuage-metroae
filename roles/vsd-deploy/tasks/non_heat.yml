---
- name: Wait for VSD ssh to be ready
  include_role:
    name: common
    tasks_from: wait-for-ssh
  vars:
    ssh_host: "{{ mgmt_ip }}"

- name: Query {{ target_server }} facts
  action: setup
  remote_user: "root"

- name: Update /etc/hosts file
  blockinfile:
    dest: /etc/hosts
    block: |
      {% for host in groups['vsds']  %}
      {{ hostvars[host]['mgmt_ip'] }}    {{ hostvars[host]['hostname'] }}
      {% endfor %}
  remote_user: "root"

- block:
  - name: Read the VSD version
    shell: echo $VSD_VERSION | cut -d . -f 1
    register: vsd_version

  - debug: var=vsd_version.stdout verbosity=1

  - block:
    - name: Generate SSH keys
      shell: ssh-keygen -b 2048 -t rsa -f /root/.ssh/id_rsa -q -N ""
      args:
        creates: /root/.ssh/id_rsa
      delegate_to: "{{ item }}"
      with_items: "{{ groups['vsds'] }}"

    - name: Get generated SSH keys
      shell: cat ~/.ssh/id_rsa.pub
      register: ssh_key_lst
      delegate_to: "{{ item }}"
      with_items: "{{ groups['vsds'] }}"

    - name: Add SSH keys to authorized_keys file
      shell: "echo {{ item[1].stdout }} >> /root/.ssh/authorized_keys"
      delegate_to: "{{ item[0] }}"
      with_nested:
        - "{{ groups['vsds'] }}"
        - "{{ ssh_key_lst.results }}"
    when: vsd_version.stdout | int < 5
  - block:
    - name: Generate SSH keys
      shell: sudo -u vsd ssh-keygen -b 2048 -t rsa -f /home/vsd/.ssh/id_rsa -q -N ""
      args:
        creates: /home/vsd/.ssh/id_rsa
      delegate_to: "{{ item }}"
      with_items: "{{ groups['vsds'] }}"

    - name: Get generated SSH keys
      shell: cat /home/vsd/.ssh/id_rsa.pub
      register: ssh_key_lst
      delegate_to: "{{ item }}"
      with_items: "{{ groups['vsds'] }}"

    - name: Add SSH keys to authorized_keys file
      shell: "echo {{ item[1].stdout }} >> /home/vsd/.ssh/authorized_keys"
      delegate_to: "{{ item[0] }}"
      with_nested:
        - "{{ groups['vsds'] }}"
        - "{{ ssh_key_lst.results }}"

    - name: Change owner and permissions of VSD authorized keys
      file:
        path: /home/vsd/.ssh/authorized_keys
        owner: vsd
        group: hadoopusers
        mode: 0640
      delegate_to: "{{ item }}"
      with_items: "{{ groups['vsds'] }}"
    when: vsd_version.stdout | int >= 5
  remote_user: root
  when: vsd_sa_or_ha | match('ha') and inventory_hostname == groups['vsds'][0]

- name: Copy files to pin OS version when CentOS 6.6 or 6.5
  copy:
    src: ./roles/vsd-deploy/files/c66/
    dest: /etc/yum.repos.d/
  remote_user: "root"
  when:
    - yum_pin
    - ansible_distribution_version|match('6.6') or ansible_distribution_version|match('6.5')

- name: Copy files to pin OS version when CentOS 6.8
  copy:
    src: ./roles/vsd-deploy/files/c68/
    dest: /etc/yum.repos.d/
  remote_user: "root"
  when:
    - yum_pin
    - ansible_distribution_version|match('6.8')

- name: Configure yum proxy
  lineinfile:
    dest: /etc/yum.conf
    regexp: "^proxy="
    line: "proxy={{ yum_proxy }}"
  remote_user: "root"
  when: not yum_proxy | match('NONE')

- name: Execute a yum update
  yum:
    name: '*'
    state: latest
  remote_user: "root"
  when: yum_update

- name: Disable cloud-init on VSD, to avoid boot time delays
  command: chkconfig cloud-init off
  remote_user: "root"

- name: Configure ntpd and ntpdate and local time zone
  include_role:
    name: common
    tasks_from: linux-ntp-sync

- name: Install VSD software on standalone node
  command: /opt/vsd/vsd-install.sh -t s -y
  when: vsd_sa_or_ha | match('sa')
  remote_user: "root"

- block:

  - name: Set if this is for a rollback
    set_fact: rollback="{{ rollback|default('False') }}"

  - name: Install VSD software on HA node1 {{groups['vsds'][0]}}
    command: "{{ vsd_node1_install_cmd }}"
    when: inventory_hostname == groups['vsds'][0]

  - name: Install VSD software on HA node2 {{groups['vsds'][1]}}
    command: "{{ vsd_node2_install_cmd }}"
    when: inventory_hostname == groups['vsds'][1] and not rollback

  - name: Install VSD software on HA node2 {{groups['vsds'][1]}}
    command: "{{ vsd_node1_rollback }}"
    when: inventory_hostname == groups['vsds'][1] and rollback

  - name: Install VSD software on HA node3 {{groups['vsds'][2]}}
    command: "{{ vsd_node3_install_cmd }}"
    when: inventory_hostname == groups['vsds'][2]

  when: vsd_sa_or_ha | match('ha')
  remote_user: "root"

- name: Set XMPP connection to allow both clear and TLS
  command: /opt/vsd/bin/ejmode allow -y
  remote_user: "root"
