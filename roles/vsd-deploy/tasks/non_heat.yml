---
- block:

  - name: Read the VSD version
    shell: echo $VSD_VERSION
    register: vsd_full_version
    remote_user: "{{ vsd_username }}"
    become: no

  - debug: var=vsd_full_version.stdout verbosity=1

  - name: Set Major, Minor and Patch VSD version
    set_fact:
        vsd_major_version: "{{ vsd_full_version.stdout.split('.')[0] }}"
        vsd_minor_version: "{{ vsd_full_version.stdout.split('.')[1] }}"
        vsd_patch_version: "{{ vsd_full_version.stdout.split('.')[2].split('U')[0] }}"

  - debug: var=vsd_full_version.stdout verbosity=1

  - debug: var=vsd_major_version verbosity=1

  - debug: var=vsd_minor_version verbosity=1

  - debug: var=vsd_patch_version verbosity=1

  - name: Set deploy_vcin to false (deploy vsd)
    set_fact:
      deploy_vcin: false

  - name: Overwrite deploy_vcin to true (deploy vcin)
    set_fact:
      deploy_vcin: true
    when:
      - vcin_mode is defined 
      - vcin_mode
      - (vsd_major_version|int > 5) or
        (vsd_major_version|int >= 5 and vsd_minor_version|int > 2) or
        (vsd_major_version|int >= 5 and vsd_minor_version|int >= 2 and vsd_patch_version|int >= 2)

  - block:

    - name: Set VSD numbering for install
      set_fact:
          vsd_cluster_node_1: "{{ groups['vsds'][0] }}"
          vsd_cluster_node_2: "{{ groups['vsds'][1] }}"
          vsd_cluster_node_3: "{{ groups['vsds'][2] }}"
      when: not nuage_upgrade

    - name: Set VSD numbering for upgrade
      set_fact:
          vsd_cluster_node_1: "{{ groups['vsds'][1] }}"
          vsd_cluster_node_2: "{{ groups['vsds'][2] }}"
          vsd_cluster_node_3: "{{ groups['vsds'][0] }}"
      when: nuage_upgrade

    when: vsd_sa_or_ha | match ('ha')
    run_once: True

  - block:

    - block:

      - block:

        - name: Generate SSH keys
          shell: ssh-keygen -b 2048 -t rsa -f /root/.ssh/id_rsa -q -N ""
          args:
            creates: /root/.ssh/id_rsa
          delegate_to: "{{ item }}"
          with_items: "{{ groups['vsds'] }}"

        - name: Get generated SSH keys
          shell: cat ~/.ssh/id_rsa.pub
          register: ssh_key_lst
          delegate_to: "{{ item }}"
          with_items: "{{ groups['vsds'] }}"

        - name: Add SSH keys to authorized_keys file
          shell: "echo {{ item[1].stdout }} >> /root/.ssh/authorized_keys"
          delegate_to: "{{ item[0] }}"
          with_nested:
            - "{{ groups['vsds'] }}"
            - "{{ ssh_key_lst.results }}"

        when: vsd_major_version | int < 5

      - block:

        - name: Generate SSH keys
          shell: sudo -u vsd ssh-keygen -b 2048 -t rsa -f /home/vsd/.ssh/id_rsa -q -N ""
          args:
            creates: /home/vsd/.ssh/id_rsa
          delegate_to: "{{ item }}"
          with_items: "{{ groups['vsds'] }}"

        - name: Get generated SSH keys
          shell: cat /home/vsd/.ssh/id_rsa.pub
          register: ssh_key_lst
          delegate_to: "{{ item }}"
          with_items: "{{ groups['vsds'] }}"

        - name: Add SSH keys to authorized_keys file
          shell: "echo {{ item[1].stdout }} >> /home/vsd/.ssh/authorized_keys"
          delegate_to: "{{ item[0] }}"
          with_nested:
            - "{{ groups['vsds'] }}"
            - "{{ ssh_key_lst.results }}"

        - name: Change owner and permissions of VSD authorized keys
          file:
            path: /home/vsd/.ssh/authorized_keys
            owner: vsd
            group: hadoopusers
            mode: 0640
          delegate_to: "{{ item }}"
          with_items: "{{ groups['vsds'] }}"

        when: vsd_major_version | int >= 5

      when: inventory_hostname == vsd_cluster_node_1 or (inventory_hostname == vsd_cluster_node_3 and nuage_upgrade)

    when: vsd_sa_or_ha | match('ha')
  
  - block:

    - name: Generate SSH key on master VCIN
      delegate_to: "{{ master_vcin }}"
      user:
        name: "{{ vsd_username }}"
        generate_ssh_key: yes
      register: master_vcin_ssh_key

    - name: Generate SSH key on slave VCIN
      user:
        name: "{{ vsd_username }}"
        generate_ssh_key: yes
      register: slave_vcin_ssh_key

    - name: Add master VCIN SSH key to slave VCIN
      authorized_key:
          key: "{{ master_vcin_ssh_key.ssh_public_key }}"
          user: "{{ vsd_username }}"

    - name: Add slave VCIN SSH key to master VCIN
      delegate_to: "{{ master_vcin }}"
      authorized_key:
          key: "{{ slave_vcin_ssh_key.ssh_public_key }}"
          user: "{{ vsd_username }}"

    when: master_vcin is defined

  - name: Configure yum proxy
    lineinfile:
      dest: /etc/yum.conf
      regexp: "^proxy="
      line: "proxy={{ yum_proxy }}"
    when: not yum_proxy | match('NONE')

  - name: Execute a yum update
    yum:
      name: '*'
      state: latest
    when: yum_update

  - name: Disable cloud-init on VSD, to avoid boot time delays
    command: "{{ item }}"
    with_items:
      - systemctl disable cloud-init
      - systemctl disable cloud-init-local
      - systemctl disable cloud-config
      - systemctl disable cloud-final

  remote_user: "{{ vsd_username }}"

- name: Configure ntpd and ntpdate and local time zone
  include_role:
    name: common
    tasks_from: linux-ntp-sync
  vars:
    rem_user: "{{ vsd_username }}"

- block:

  - block:

    - name: Install VSD software on standalone node
      command: /opt/vsd/vsd-install.sh -t s -y
      when: not deploy_vcin

    - name: Install VCIN software on VCIN node
      command: /opt/vsd/vsd-install.sh -t v -y
      when: deploy_vcin

    when: 
      - vsd_sa_or_ha | match ('sa')
      - master_vcin is not defined

  - block:

    - name: Preparing the master
      delegate_to: "{{ master_vcin }}"
      command: /opt/vsd/bin/vsd-prepare-replication-master-cluster.sh

    - name: Preparing replication on the master
      delegate_to: "{{ master_vcin }}"
      command: "/opt/vsd/bin/vsd-prepare-replication-master.sh -a {{ inventory_hostname }}"

    - name: Creating the data folder on the slave
      file:
        path: /opt/vsd/data/
        state: directory

    - name: Syncing the backup from the master to the local system
      delegate_to: "{{ master_vcin }}"
      synchronize:
          dest: /opt/vsd/data/
          src: /tmp/backup/
          mode: push

    - name: Install VCIN software on slave VCIN node
      command: /opt/vsd/vsd-install.sh -t v -y

    - name: Start the replication
      command: "/opt/vsd/bin/vsd-start-replication-slave -m {{ master_vcin }}"

    when: 
      - vsd_sa_or_ha | match ('sa')
      - deploy_vcin
      - master_vcin is defined

  - block:

    - name: Install VSD software on the first cluster node
      command: "{{ vsd_node1_install_cmd }}"
      when: inventory_hostname == vsd_cluster_node_1

    - name: Install VSD software on the second cluster node
      command: "{{ vsd_node2_install_cmd }}"
      when: inventory_hostname == vsd_cluster_node_2

    - name: Install VSD software on the third cluster node
      command: "{{ vsd_node3_install_cmd }}"
      when: inventory_hostname == vsd_cluster_node_3

    when: vsd_sa_or_ha | match('ha')

  - name: Set XMPP connection to allow both clear and TLS
    command: /opt/vsd/bin/ejmode allow -y
    when: not deploy_vcin

  remote_user: "{{ vsd_username }}"
