---
- name: Pull facts on target_server
  setup: gather_subset=!all
  delegate_to: "{{ target_server }}"
  remote_user: "{{ target_server_username }}"

- name: List the Virtual Machines on target_server
  virt: command=list_vms
  register: virt_vms
  delegate_to: "{{ target_server }}"
  remote_user: "{{ target_server_username }}"

- name: Shutdown/Destroy upgraded vsd node(s) if existing
  include_role:
    name: vsd-destroy
  vars:
    destroy_upgrade_vm: True

- name: "Run previously stopped VSD VM"
  virt: name="{{ vmname }}"
        state=running
        uri=qemu:///system
  delegate_to: "{{ target_server }}"
  remote_user: "{{ target_server_username }}"


- name: Wait for VSD ssh to be ready
  local_action:
    module: wait_for
    port: "22"
    host: "{{ mgmt_ip }}"
    search_regex: OpenSSH
    delay: 1

# Since VSD VM might have been down for a while, it is good to force NTP sync

- name: Configure ntpd and ntpdate and local time zone, sync ntp
  include_role:
    name: common
    tasks_from: linux-ntp

- block:
  - name: Get monit summary for all process on VSD
    vsd_monit:
      group: all
    register: proc_list
    remote_user: "root"

  - name: wait for VSD common , core and stats services to become running
    monit_waitfor_service:
      name: "{{ item }}"
      timeout_seconds: 1200
      test_interval_seconds: 30
    with_items: "{{ proc_list['state'].keys() }}"
    remote_user: "root"
  when: vsd_sa_or_ha | match('sa') or inventory_hostname in groups['vcins']

- block:
  - name: Get current version of VSD software
    command: echo $VSD_VERSION
    register: vsd_version
    remote_user: "root"

  - name: Print vsd_version output when verbosity >= 1
    debug: var=vsd_version verbosity=1

  - name: Disable maintainance mode on all l3/l2 domains
    vsd_maintainance:
      vsd_auth: "{{ vsd_auth }}"
      api_version: "{{ vsd_version.stdout }}"
      state: disabled
    register: mode_status
    delegate_to: 127.0.0.1

  - name: Print vsd maintainance mode output when verbosity >= 1
    debug: var=mode_status verbosity=1

  - name: Print vsd maintainance mode output when verbosity >= 1
    debug: var=mode_status verbosity=1

  - name: Clean known_hosts of VSCs on "{{ target_server }}"
    command: ssh-keygen -R "{{ item }}"
    delegate_to: localhost
    with_items: "{{ groups['vscs'] }}"

  - name: shut/noshut vswitch controller on VSCs after disabling VSD maintenance mode
    sros_config:
      lines:
          - configure vswitch-controller shutdown
          - configure vswitch-controller no shutdown
      provider:
        host: "{{ item }}"
        username: "{{ vsc_user|default('admin') }}"
        password: "{{ vsc_password|default('admin') }}"
    delegate_to: localhost
    register: vsc_command_status
    with_items: "{{ groups['vscs'] }}"

  - debug: var=vsc_command_status verbosity=1

  when:
   - vsd_sa_or_ha | match('sa')
   - inventory_hostname not in groups['vcins']
