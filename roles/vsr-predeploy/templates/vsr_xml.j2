<domain type="kvm">
  <uuid>{{ vsr_vm_uuid }}</uuid>
  <name>{{ vmname }}</name>
  <memory unit="G">{{ vsr_memory }}</memory>
  <vcpu>{{ vsr_vcpu }}</vcpu>
  <cpu mode="host-model">
    <model fallback="allow" />
  </cpu>
  <sysinfo type="smbios">
    <system>
{% set _static_routes = [] %}
{% if mgmt_static_route_list is defined %}
{% for route in mgmt_static_route_list %}{{ _static_routes.append('static-route='+route+'@'+mgmt_gateway) }}{% endfor %}
{% endif %}
      <entry name="product">TIMOS:slot=A chassis=VSR-I card=cpm-v mda/1=m20-v address={{ (mgmt_ip + '/' + mgmt_netmask_prefix) | ipaddr() }}@active {{ _static_routes|join(' ') }} license-file=cf3:/license.txt</entry>
    </system>
  </sysinfo>
  <os>
    <type arch="x86_64" machine="pc">hvm</type>
    <boot dev="hd" />
    <smbios mode="sysinfo" />
  </os>
  <clock offset="utc">
    <timer name="pit" tickpolicy="delay" />
    <timer name="rtc" tickpolicy="catchup" />
    <timer name="hpet" present="no" />
  </clock>
  <devices>
    <emulator>/usr/libexec/qemu-kvm</emulator>
    <controller model="pci-root" type="pci" />
    <disk device="disk" type="file">
      <driver cache="none" name="qemu" type="qcow2" />
      <source file="{{ vsr_target_qcow2_file_path }}" />
      <target bus="virtio" dev="hda" />
    </disk>
    <interface type="bridge">
      <source bridge="{{ mgmt_to_hv_bridge }}" />
      <model type="virtio" />
    </interface>
{% for bridge in ports_to_hv_bridges %}
    <interface type="bridge">
      <source bridge="{{ bridge }}" />
      <model type="virtio" />
    </interface>
{% endfor %}
    <serial type="pty">
      <source path="/dev/pts/1" />
      <target port="0" />
      <alias name="serial0" />
    </serial>
    <console tty="/dev/pts/1" type="pty">
      <source path="/dev/pts/1" />
      <target port="0" type="serial" />
      <alias name="serial0" />
    </console>
  </devices>
</domain>
