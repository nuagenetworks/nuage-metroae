---
- block:

  - block:

    - name: Find name of VSC QCOW2 File
      find: path="{{ nuage_unzipped_files_dir }}/vsc"  pattern="vsc_singledisk.qcow2" recurse=yes
      register: rc_vsc_file

    - debug: var=rc_vsc_file verbosity=1

    - name: Verify that a VSC QCOW2 file was found
      assert: {
        that: "{{ rc_vsc_file.matched }} > 0",
        msg: "Unable to find VSC VM QCOW2 image file"
        }

    - name: Register VSC QCOW2 variables with proper path and image locations for use in other playbooks
      set_fact:
        qcow2_path: "{{ rc_vsc_file.files[0].path | dirname }}"
        qcow2_file_name: "{{ rc_vsc_file.files[0].path | basename }}"
      when: rc_vsc_file.matched > 0

    when: myvscs | map(attribute='target_server_type') | list | issuperset(["kvm"])

  - block:

    - name: Find name of VSC OVA File
      find: path="{{ nuage_unzipped_files_dir }}/vsc"  pattern="vsc_singledisk.ova" recurse=yes
      register: rc_vsc_file

    - debug: var=rc_vsc_file verbosity=1

    - name: Verify that a VSC OVA file was found
      assert: {
        that: "{{ rc_vsc_file.matched }} > 0",
        msg: "Unable to find VSC VM OVA image file"
        }

    - name: Register VSC OVA variables with proper path and image locations for use in other playbooks
      set_fact:
        ova_path: "{{ rc_vsc_file.files[0].path | dirname }}"
        ova_file_name: "{{ rc_vsc_file.files[0].path | basename }}"
      when: rc_vsc_file.matched > 0

    when: myvscs | map(attribute='target_server_type') | list | issuperset(["vcenter"])

  when:
    - myvscs is defined
    - "'install' in vsc_operations_list|default(['None']) or 
       'upgrade' in vsc_operations_list|default(['None'])"
  tags:
    - vsc

- block:

  - name: Find name of VSC TIM File
    find: path="{{ nuage_upgrade_unzipped_files_dir }}/vsc"  pattern="cpm.tim" recurse=yes
    register: rc_vsc_tim_file

  - debug: var=rc_vsc_tim_file verbosity=1

  - name: Verify that a VSC TIM file was found
    assert: {
      that: "{{ rc_vsc_tim_file.matched }} > 0",
      msg: "Unable to find VSC TIM image file"
      }

  - name: Register VSC TIM variables with proper path and image locations for use in other playbooks
    set_fact:
      vsc_tim_path: "{{ rc_vsc_tim_file.files[0].path | dirname }}"
      vsc_tim_file_name: "{{ rc_vsc_tim_file.files[0].path | basename }}"
    when: rc_vsc_tim_file.matched > 0

  when: 
    - myvscs is defined
    - "'upgrade' in vsc_operations_list|default(['None'])"
  tags:
    - vsc

- name: Set myvscs_check
  set_fact: myvscs_check={{myvscs is defined}}

- name: Assign empty list to myvscs if it is undefined
  set_fact: myvscs= default([])
  when: not myvscs_check

- name: Create host_vars files for vsc
  template: src=vsc.j2 backup=no dest={{ playbook_dir }}/host_vars/{{ item.hostname }}
  with_items: "{{ myvscs }}"
  when: myvscs_check
