- name: Get vsd node(s) information
  import_role:
    name: common
    tasks_from: vsd-node-info.yml
  vars:
    vsd_hostname: "{{ vsd_fqdn }}"
  run_once: true

- name: Get VSD version
  shell: echo $VSD_VERSION
  register: vsd_version
  delegate_to: "{{ vsd_hostname_list[0] }}"
  remote_user: "{{ vsd_username }}"

- name: Check if the user is already present
  shell: '/opt/vsd/ejbca/bin/ejbca.sh ra listendentities -S 40 | grep "End Entity: {{ certificate_username }}"'
  register: userExistsOutput
  remote_user: "{{ vsd_username }}"
  delegate_to: "{{ vsd_hostname_list[0] }}"
  ignore_errors: yes

- name: Create and transfer certs from VSD
  shell: "/bin/sshpass -p{{ certificate_password }} /opt/vsd/ejbca/deploy/certMgmt.sh -a generate -u {{ certificate_username }} -c {{ commonName }} -o csp -f pem -t {{ certificate_type }} -s {{ scp_user }}@{{ inventory_hostname }}:{{ scp_location }} {{ additional_parameters }} "
  remote_user: "{{ vsd_username }}"
  delegate_to: "{{ vsd_hostname_list[0] }}"
  register: created
  until: "created.rc == 0 or (created.stdout is search('fail adding entity'))"
  retries: 5
  delay: 30
  when: "'4.0.4' not in vsd_version and userExistsOutput.rc != 0"

- name: Create and transfer certs from 4.0.4 VSD
  shell: "/bin/sshpass -p{{ certificate_password }} /opt/vsd/ejbca/deploy/certMgmt.sh -a generate -u {{ certificate_username }} -c {{ commonName }} -o csp -f pem -t {{ certificate_type }} -s {{ scp_user }}@{{ inventory_hostname }}:{{ scp_location }}   -n VSPCA {{ additional_parameters }} "
  remote_user: "{{ vsd_username }}"
  delegate_to: "{{ vsd_hostname_list[0] }}"
  register: created
  until: "created.rc == 0 or (created.stdout is search('fail adding entity'))"
  retries: 5
  delay: 30
  when: "'4.0.4' in vsd_version and userExistsOutput.rc != 0"
  
