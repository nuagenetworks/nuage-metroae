---
- name: Set build files path
  set_fact:
    build_files_path: "{{ inventory_dir }}"

- name: Set build_vars variable
  set_fact:
    build_vars: "{{ build_vars_file | default (build_files_path+'/build_vars.yml') }}"

- name: Include build variable files
  include_vars: "{{ build_vars }}"

- name: Include user credential file
  include_vars: "{{ user_creds_file | default (build_files_path+'/user_creds.yml') }}"

- name: Set local variable to force build
  set_fact:
    force: "{{ force_build | default(False) }}"

- name: Find build_vars.md5 file
  find: path="{{ inventory_dir }}" pattern="build_vars.md5"
  register: md5_file

- name: Get md5 value for build vars file
  stat:
    path: "{{ build_vars }}"
    get_md5: yes
  register: md5_for_build_vars

- name: Set local variable with current md5 value
  set_fact:
    current_md5: "{{ md5_for_build_vars.stat.md5 }}"

- name: Get stored md5 value
  command: "cat {{ md5_file.files[0].path }}"
  register: stored_md5_string
  when: md5_file.matched == 1

- name: Set local variable with stored md5 value when md5 file exists
  set_fact:
    stored_md5: "{{ stored_md5_string.stdout }}"
  when: md5_file.matched == 1

- name: Set stored_md5 value to current_md5 when md5 file does not exists
  set_fact:
    stored_md5: "{{ current_md5 }}"
  when: md5_file.matched == 0

- block:
  - name: Check yaml syntax in build vars file
    include_role:
      name: common
      tasks_from: check-build-vars-syntax.yml

  - name: Validate build variables
    include_role:
      name: common
      tasks_from: validate-build-vars.yml

  - include_role:
      name: build
  when: stored_md5 != current_md5 or
        md5_file.matched == 0 or
        force
    

- name: Update md5 value
  template: src=build_vars_md5.j2 backup=no dest={{ inventory_dir }}/build_vars.md5
