---
- name: Finding VM folder
  connection: local
  vmware_guest_find:
    hostname: "{{ target_server }}"
    username: "{{ vcenter.username }}"
    password: "{{ vcenter.password }}"
    datacenter: "{{ vcenter.datacenter }}"
    name: "{{ vmname }}"
    validate_certs: no
  register: vsc_vm_folder
  ignore_errors: on
  
- name: Gathering info on VM
  connection: local
  vmware_guest_facts:
    hostname: "{{ target_server }}"
    username: "{{ vcenter.username }}"
    password: "{{ vcenter.password }}"
    datacenter: "{{ vcenter.datacenter }}"
    folder: "/{{ vcenter.datacenter }}{{ vsc_vm_folder['folders'][0] }}"
    name: "{{ vmname }}"
    validate_certs: no
  register: vsc_vm_facts
  ignore_errors: on
  when: vsc_vm_folder|succeeded

- debug: var=vsc_vm_facts verbosity=1

- block:
  
  - block:
  
    - name: Get Facts of VM
      vmware_vm_facts:
        hostname: "{{ target_server }}"
        username: "{{ vcenter.username }}"
        password: "{{ vcenter.password }}"
      delegate_to: localhost
      register: vm_list
      
    - name: Set VM UUID
      set_fact:
        uuid: "{{ vm_list.virtual_machines[vm_name]['uuid'] }}"
      when: vm_name in vm_list.virtual_machines
  
    - debug: var=uuid
    
    - name: Turn off autostart
      connection: local
      vmware_autostart:
        name: "{{ vm_name }}"
        uuid: "{{ uuid }}"
        hostname: "{{ target_server }}"
        username: "{{ vcenter.username }}"
        password: "{{ vcenter.password }}"
        state: disable

    - name: Power off the VSC VM
      connection: local
      vmware_guest:
        hostname: "{{ target_server }}"
        username: "{{ vcenter.username }}"
        password: "{{ vcenter.password }}"
        validate_certs: no
        datacenter: "{{ vcenter.datacenter }}"
        folder: "/{{ vcenter.datacenter }}{{ vsc_vm_folder['folders'][0] }}"
        name: "{{ vmname }}"
        state: "poweredoff"
      
    when: vsc_vm_facts['instance']['hw_power_status'] == 'poweredOn'

  - name: Removing the VSC VM
    connection: local
    vmware_guest:
      hostname: "{{ target_server }}"
      username: "{{ vcenter.username }}"
      password: "{{ vcenter.password }}"
      validate_certs: no
      datacenter: "{{ vcenter.datacenter }}"
      folder: "/{{ vcenter.datacenter }}{{ vsc_vm_folder['folders'][0] }}"
      name: "{{ vmname }}"
      state: "absent"
      
  when: vsc_vm_folder|succeeded and vsc_vm_facts|succeeded
