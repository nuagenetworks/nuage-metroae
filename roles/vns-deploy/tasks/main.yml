---
- name: Clean known_hosts of VSC's on "{{ target_server }}"
  command: ssh-keygen -R "{{ mgmt_ip }}" -f /root/.ssh/known_hosts
  delegate_to: "{{ ansible_deployment_host }}"
  remote_user: "{{ ansible_sudo_username }}" 

- name: Change XMPP connection to TLS on VSD
  command: /opt/vsd/bin/ejmode allow -y
  remote_user: "root"
  delegate_to: "{{ vsd_fqdn }}"

- name: wait for ejabberd-status to become running
  monit_waitfor_service:
    name: "ejabberd-status"
    timeout_seconds: 600
    test_interval_seconds: 30
  remote_user: "root"
  delegate_to: "{{ vsd_fqdn }}"

- name: wait for ejbca-status to become running
  monit_waitfor_service:
    name: "ejbca-status"
    timeout_seconds: 600
    test_interval_seconds: 30
  remote_user: "root"
  delegate_to: "{{ vsd_fqdn }}"

- block:
  - name: Download pip installer
    command: curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
    delegate_to: "{{ vsd_fqdn }}"
    remote_user: "root"
  
  - name: Execute pip installer
    command: python get-pip.py
    delegate_to: "{{ vsd_fqdn }}"
    remote_user: "root"
 
  - name: Install pexpect on VSD
    pip:
      name: pexpect
    delegate_to: "{{ vsd_fqdn }}"
    remote_user: "root"
  when: yum_proxy == 'NONE'

- block:
  - name: Download pip installer through proxy
    command: curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
    delegate_to: "{{ vsd_fqdn }}"
    remote_user: "root"
    environment:
      http_proxy: "{{ yum_proxy }}"
      https_proxy: "{{ yum_proxy }}"

  - name: Execute pip installer through proxy
    command: python get-pip.py
    delegate_to: "{{ vsd_fqdn }}"
    remote_user: "root"
    environment:
      http_proxy: "{{ yum_proxy }}"
      https_proxy: "{{ yum_proxy }}"
 
  - name: Install pexpect on VSD through proxy
    pip:
      name: pexpect
    delegate_to: "{{ vsd_fqdn }}"
    remote_user: "root"
    environment:
      http_proxy: "{{ yum_proxy }}"
      https_proxy: "{{ yum_proxy }}"
  when: yum_proxy != 'NONE'

- name: Get VSD version
  shell: echo $VSD_VERSION
  register: vsd_version
  delegate_to: "{{ vsd_fqdn }}"
  remote_user: "root"

- name: Create and transfer certs from 4.0.4 VSD
  expect:
   timeout: 55
   command: "{{ create_certs_404 }}"
   responses:
     (?i)password: "admin"
  delegate_to: "{{ vsd_fqdn }}"
  remote_user: "root"
  when: "'4.0.4' in vsd_version.stdout"

- name: Create and transfer certs from VSD
  expect:
   timeout: 120
   command: "{{ create_certs }}"
   responses:
     (?i)password: "admin"
  delegate_to: "{{ vsd_fqdn }}"
  remote_user: "root"
  when: "'4.0.4' not in vsd_version.stdout"

- name: Create TLS profile in {{ inventory_hostname }}
  local_action: command python {{playbook_dir}}/roles/vns-deploy/files/vsc_config.py {{ playbook_dir  }} {{ xmpp.username }}
  register: output

- name: Verification Result Failure Status
  fail: msg={{ output.stdout }}
  when: output.stdout | search("(?i)MINOR")
  ignore_errors: yes

- name: Verification Result Success Status
  debug: var=output.stdout verbosity=1
