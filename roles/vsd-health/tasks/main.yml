---
- name: Wait for VM to be ready
  local_action:
    module: wait_for
    port: "22"
    host: "{{ mgmt_ip }}"
    search_regex: OpenSSH
    delay: 1

- name: Clean known_hosts
  known_hosts:
    name: "{{ mgmt_ip }}"
    state: absent
  delegate_to: localhost

- include: report_header.yml

- name: Get current version of VSD software
  command: echo $VSD_VERSION
  register: vsd_version
  remote_user: "root"

- name: Write VSD version to json file
  nuage_append: filename="{{ report_path }}" text="{{ vsd_version.stdout | to_nice_json}}\n"
  delegate_to: localhost

- name: Get current network config of all VSD nodes
  network_info:
    mac_addr: False
  register: net_conf
  remote_user: root

- name: Print network config when verbosity >= 1
  debug: var=net_conf.info verbosity=1

- name: Write network config to json file
  nuage_append: filename="{{ report_path }}" text="{{ net_conf.info | to_nice_json}}\n"
  delegate_to: localhost

- name: Execute list_p1db command on VSD(s)
  command: "{{ p1db_cmd }}"
  register: list_p1db_output
  remote_user: root

- name: Print ejabberd list_p1db output when verbosity >= 1
  debug: var=list_p1db_output verbosity=1

- name: Create local variable with p1db output to json
  set_fact: ejabberd_p1db_json="{{ list_p1db_output.stdout|ejabberd_p1db_to_json }}"

- name: Write p1bd JSON to file
  nuage_append: filename="{{ report_path }}" text="{{ inventory_hostname }} {{ ejabberd_p1db_json|to_nice_json }}\n"
  delegate_to: localhost

- name: Execute list_cluster command on VSD(s)
  command: "{{ ejabber_cluster_list_command }}"
  register: list_cluster_output
  remote_user: root

- name: Print ejabberd list_cluster_output when verbosity >= 1
  debug: var=list_cluster_output verbosity=1

- name: Create local variable with ejabberd cluster output to json
  set_fact: ejabberd_cluster_json="{{ list_cluster_output.stdout|ejabberd_cluster_to_json }}"

- name: Write cluster JSON to file
  nuage_append: filename="{{ report_path }}" text="{{ inventory_hostname }} {{ ejabberd_cluster_json|to_nice_json }}\n"
  delegate_to: localhost

- name: Excute ejabberd_connected_users_command command on VSD(s)
  command: "{{ ejabberd_connected_users_command }}"
  register: user_list
  remote_user: root

- name: Print ejabberd connected_users output when verbosity >= 1
  debug: var=user_list verbosity=1

- name: Create local variable with ejabberd connected users to json
  set_fact: ejabberd_users_json="{{ user_list.stdout|ejabberd_clients_to_json }}"

- name: Write users JSON to file
  nuage_append: filename="{{ report_path }}" text="{{ inventory_hostname }} {{ ejabberd_users_json|to_nice_json }}\n"
  delegate_to: localhost

- block:
  - name: Verify cna user is found in connected_users of ejabberd in vsds
    assert:
      that: "user_list.stdout|search('cna@{{ vsd_fqdn }}')"
      msg: "cna@{{ vsd_fqdn }} could not be found in '/opt/ejabberd/bin/ejabberdctl connected_users'"

  - name: Verify push user is found in connected_users of ejabberd in vsds
    assert:
      that: "user_list.stdout|search('push@{{ vsd_fqdn }}')"
      msg: "push@{{ vsd_fqdn }} could not be found in '/opt/ejabberd/bin/ejabberdctl connected_users'"

  - name: Verify keyserver user is found in connected_users of ejabberd in vsds
    assert:
      that: "user_list.stdout|search('keyserver@{{ vsd_fqdn }}')"
      msg: "keyserver@{{ vsd_fqdn }} could not be found in '/opt/ejabberd/bin/ejabberdctl connected_users'"
  when: (vsd_sa_or_ha == 'ha') or (vsd_sa_or_ha == 'HA')

- include: monit_status.yml

- include: report_footer.yml
