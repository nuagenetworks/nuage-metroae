---
- block:

  - name: Get monit summary for all process on VSD
    vsd_monit:
      group: all
    register: proc_list

  - name: Wait for VSD common, core and stats services to become running
    monit_waitfor_service:
      name: "{{ item }}"
      timeout_seconds: 1200
      test_interval_seconds: 30
    with_items: "{{ proc_list['state'].keys() }}"

  - name: Get current version of VSD software to use it in loading correct vspk version
    command: echo $VSD_VERSION
    register: vsd_version

  remote_user: "{{ vsd_default_username }}"

- name: Print vsd_version output when verbosity >= 1
  debug: var=vsd_version verbosity=1

- name: Disable maintainance mode on all l3/l2 domains
  vsd_maintainance:
    vsd_auth:
      "{{ vsd_auth }}"
    state: disabled
    api_version: "{{ vsd_version.stdout }}"
  register: mode_status
  delegate_to: 127.0.0.1

- name: Print vsd maintainance mode output when verbosity >= 1
  debug: var=mode_status verbosity=1

- name: Clean known_hosts of VSC 1 on "{{ target_server }}"
  known_hosts:
    name: "{{ groups['vscs'][0] }}"
    state: absent
  delegate_to: localhost
  run_once: true
  when: groups['vscs'] is defined and groups['vscs'][0] is defined
  no_log: True
  ignore_errors: True

- name: Clean known_hosts of VSC 2 on "{{ target_server }}"
  known_hosts:
    name: "{{ groups['vscs'][1] }}"
    state: absent
  delegate_to: localhost
  run_once: true
  when: groups['vscs'] is defined and groups['vscs'][1] is defined
  no_log: True
  ignore_errors: True

- name: Shut/noshut vswitch controller on vsc1 after disabling VSD maintenance mode
  sros_config:
    lines:
        - configure vswitch-controller shutdown
        - configure vswitch-controller no shutdown
    provider:
      host: "{{ groups['vscs'][0] }}"
      username: "{{ vsc_default_username|default('admin') }}"
      password: "{{ vsc_default_password|default('admin') }}"
  delegate_to: localhost
  register: vsc1_command_status
  run_once: true
  when: groups['vscs'] is defined and groups['vscs'][0] is defined

- debug: var=vsc1_command_statusa verbosity=1

- name: Shut/noshut vswitch controller on vsc2 after disabling VSD maintenance mode
  sros_config:
    lines:
        - configure vswitch-controller shutdown
        - configure vswitch-controller no shutdown
    provider:
      host: "{{ groups['vscs'][1] }}"
      username: "{{ vsc_default_username|default('admin') }}"
      password: "{{ vsc_default_password|default('admin') }}"
  delegate_to: localhost
  run_once: true
  when: groups['vscs'] is defined and groups['vscs'][1] is defined

- name: read saved vsd purge time before upgrade
  command: cat "{{metro_backup_root}}/backup-{{ groups['vsds'][0] }}-latest/purge_time"
  register: purge_time_saved
  delegate_to: 127.0.0.1

- debug: var=purge_time_saved.stdout verbosity=1

- name: Update gateway purge timer to original value
  config_vsd_system:
    vsd_auth:
      "{{ vsd_auth }}"
    gateway_purge_time: "{{ purge_time_saved.stdout }}"
    api_version: "{{ vsd_version.stdout }}"
  register: update_time_status
  delegate_to: 127.0.0.1
