---
- name: Get monit summary for all process on VSD
  vsd_monit:
    state: summary
  register: proc_list
  remote_user: "root"

- name: wait for VSD common , core and stats services to become running
  monit_waitfor_service:
    name: "{{ item }}"
    timeout_seconds: 1200
    test_interval_seconds: 30
  with_items: "{{ proc_list['state'].keys() }}"
  remote_user: "root"

- name: Get current version of VSD software to use it in loading correct vspk version
  command: echo $VSD_VERSION
  register: vsd_version
  remote_user: "root"

- name: Print vsd_version output when verbosity >= 1
  debug: var=vsd_version verbosity=1

- name: Disable maintainance mode on all l3/l2 domains
  vsd_maintainance:
    vsd_auth:
      "{{ vsd_auth }}"
    state: disabled
    api_version: "{{ vsd_version.stdout }}"
  register: mode_status
  delegate_to: 127.0.0.1

- name: Print vsd maintainance mode output when verbosity >= 1
  debug: var=mode_status verbosity=1

# TODO: Determine if cleaning known_hosts of vscs is required here. 
- name: Clean known_hosts of VSC 1 on "{{ target_server }}"
  command: ssh-keygen -R "{{  groups['vscs'][0] }}" -f /root/.ssh/known_hosts
  delegate_to: "{{ ansible_deployment_host }}"
  remote_user: "{{ ansible_sudo_username }}"
  run_once: true

# TODO: Determine if cleaning known_hosts of vscs is required here. 
- name: Clean known_hosts of VSC 2 on "{{ target_server }}"
  command: ssh-keygen -R "{{  groups['vscs'][1] }}" -f /root/.ssh/known_hosts
  delegate_to: "{{ ansible_deployment_host }}"
  remote_user: "{{ ansible_sudo_username }}"
  run_once: true

- name: shut/noshut vswitch controller on vsc1 after disabling VSD maintenance mode
  sros_config:
    lines:
        - configure vswitch-controller shutdown
        - configure vswitch-controller no shutdown
    provider:
      host: "{{ groups['vscs'][0] }}"
      username: "{{ vsc_user }}"
      password: "{{ vsc_password }}"
      transport: cli
  register: vsc1_command_status
  delegate_to: "{{ ansible_deployment_host }}"
  remote_user: "{{ ansible_sudo_username }}"
  run_once: true

- debug: var=vsc1_command_statusa verbosity=1

- name: shut/noshut vswitch controller on vsc2 after disabling VSD maintenance mode
  sros_config:
    lines:
        - configure vswitch-controller shutdown
        - configure vswitch-controller no shutdown
    provider:
      host: "{{ groups['vscs'][1] }}"
      username: "{{ vsc_user }}"
      password: "{{ vsc_password }}"
      transport: cli
  register: vsc2_command_status verbosity=1
  delegate_to: "{{ ansible_deployment_host }}"
  remote_user: "{{ ansible_sudo_username }}"
  run_once: true

- debug: var=vsc2_command_status verbosity=1

- name: read saved vsd purge time before upgrade
  command: cat "/tmp/backup-{{ groups['vsd_node1'][0] }}-latest/purge_time"
  register: purge_time_saved
  delegate_to: 127.0.0.1

- debug: var=purge_time_saved.stdout verbosity=1

- name: Update gateway purge timer to original value
  config_vsd_system:
    vsd_auth:
      "{{ vsd_auth }}"
    gateway_purge_time: "{{ purge_time_saved.stdout }}"
    api_version: "{{ vsd_version.stdout }}"
  register: update_time_status
  delegate_to: 127.0.0.1
