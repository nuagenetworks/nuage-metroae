
# Install Pre-Requisites
- name: Pull facts of localhost
  setup:
  delegate_to: localhost

- name: Install pip on RedHat OS family distribution
  yum: name="python-pip" state="present"
  when: ansible_os_family == "RedHat"
  delegate_to: localhost

- name: Install pip on Debian OS family distribution
  apt: name="python-pip" state="present"
  when: ansible_os_family == "Debian"
  delegate_to: localhost

- name: Install pexpect module via pip
  pip: name=pexpect state="present" 
  delegate_to: localhost

- name: Set name for backup folder
  set_fact:
    backup_folder: "backup-{{ ansible_date_time.iso8601_basic_short }}"

- name: Create a backup folder on VSC1
  sros_command:
    commands:
      - file md "{{ backup_folder }}"
    provider: "{{ vsc_creds }}"
  register: dir_status
  delegate_to: "{{ ansible_deployment_host }}"
  remote_user: "{{ ansible_sudo_username }}"

- name: Verify backup folder is created on VSC1
  assert:
    that: "dir_status.stdout[0] == ''"
    msg: "Could not create backup folder on VSC1"

- name: Copy bof and existing config files to backup folder on vsc
  sros_command:
    commands:
      - file copy *.cfg "{{ backup_folder }}"
      - file copy "{{ bof_json['image_folder'] }}/cpm.tim" "{{ backup_folder }}"
    provider: "{{ vsc_creds }}"
  register: copy_status
  delegate_to: "{{ ansible_deployment_host }}"
  remote_user: "{{ ansible_sudo_username }}"

- name: Print 'file copy *.cfg backup' when verbosity >= 1
  debug: var=copy_status verbosity=1

- name: Create dir on ansible_deployment_host to hold backup files
  file:
    path: "/tmp/vsc/{{ inventory_hostname }}"
    state: directory
  delegate_to: "{{ ansible_deployment_host }}"
  remote_user: "{{ ansible_sudo_username }}"

- name: Transfer backup folder from VSC1 to backup_machine
  expect:
    command: "{{ transfer_folder }}"
    responses:
      (?i)password: "{{ vsc_password }}"
  delegate_to: "{{ ansible_deployment_host }}"  
  remote_user: "{{ ansible_sudo_username }}"
