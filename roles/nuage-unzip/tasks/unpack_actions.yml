- name: Find source file based on pattern
  find:
    path: "{{ unpack_zipped_files_dir | default(nuage_zipped_files_dir) }}"
    pattern: "{{ unpack_pattern }}"
    use_regex: "{{ unpack_pattern_regexp | default(False) }}"
    follow: yes
  register: unpack_src_file

- debug: var=unpack_src_file verbosity=1

- block:
  - name: Clean up any previous unzipped files
    file:
      name:  "{{ nuage_unzipped_files_dir }}/{{ unpack_target_folder }}"
      state: absent
    remote_user: "{{ unzip_user }}"

  - name: Create subdirectory for unzipped files
    file:
      name: "{{ nuage_unzipped_files_dir }}/{{ unpack_target_folder }}"
      state: directory
      mode: 0775
    remote_user: "{{ unzip_user }}"

  - name: Unpack {%if unpack_src_file.matched > 0 %}{{ unpack_src_file.files[0].path }}{%endif%} Archive
    unarchive:
      src: "{{ unpack_src_file.files[0].path }}"
      dest: "{{ nuage_unzipped_files_dir }}/{{ unpack_target_folder }}"
      list_files: yes
      mode: 0775
      extra_opts: "--no-same-owner"
      remote_src: yes
    register: '{{ unpack_register_var }}'
    remote_user: "{{ unzip_user }}"

  - debug: var='{{ unpack_register_var }}' verbosity=1

  when: unpack_src_file.matched > 0
